{
  "address": "0x9471a8FdA92159575095ebA719e850E01d78fd6D",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "AuctionCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "closeTimestamp",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "finisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        }
      ],
      "name": "AuctionFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidPrice",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        }
      ],
      "name": "BidCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctions",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "closeTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bidPrice",
          "type": "uint256"
        }
      ],
      "name": "bidForNFT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAuction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "finishAuction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getAuctionDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IGhafNftMarketPlace.Auction",
          "name": "auction",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initialPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionDuration",
          "type": "uint256"
        }
      ],
      "name": "listMyNFTToSale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb18fe6717d069a5517fec9c8806f4ef7a875840f57ccab5b19d314b29f2320cf",
  "receipt": {
    "to": null,
    "from": "0x5364E3557572bd5D5903C0e9C21BE359F2Eac1dA",
    "contractAddress": "0x9471a8FdA92159575095ebA719e850E01d78fd6D",
    "transactionIndex": 2,
    "gasUsed": "1051104",
    "logsBloom": "0x
    "blockHash": "0x13e1f2e1559d1cbb9f2858a181245bc2e917fd727fb3da4aed02a0079152339b",
    "transactionHash": "0xb18fe6717d069a5517fec9c8806f4ef7a875840f57ccab5b19d314b29f2320cf",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 30413903,
        "transactionHash": "0xb18fe6717d069a5517fec9c8806f4ef7a875840f57ccab5b19d314b29f2320cf",
        "address": "0x9471a8FdA92159575095ebA719e850E01d78fd6D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005364e3557572bd5d5903c0e9c21be359f2eac1da"
        ],
        "data": "0x",
        "logIndex": 14,
        "blockHash": "0x13e1f2e1559d1cbb9f2858a181245bc2e917fd727fb3da4aed02a0079152339b"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 30413903,
        "transactionHash": "0xb18fe6717d069a5517fec9c8806f4ef7a875840f57ccab5b19d314b29f2320cf",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005364e3557572bd5d5903c0e9c21be359f2eac1da",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000099fffec7f6240000000000000000000000000000000000000000000000005c8d42f8b27d324a70000000000000000000000000000000000000000000009acb86ecfc17d293b35000000000000000000000000000000000000000000000005c8ca8f8b3b53c2670000000000000000000000000000000000000000000009acb8786fc169a89d75",
        "logIndex": 15,
        "blockHash": "0x13e1f2e1559d1cbb9f2858a181245bc2e917fd727fb3da4aed02a0079152339b"
      }
    ],
    "blockNumber": 30413903,
    "cumulativeGasUsed": "2209925",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "be92c100721332835fe7376d5def709d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"closeTimestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"finisher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"}],\"name\":\"AuctionFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidPrice\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"name\":\"BidCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidPrice\",\"type\":\"uint256\"}],\"name\":\"bidForNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"finishAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getAuctionDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGhafNftMarketPlace.Auction\",\"name\":\"auction\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionDuration\",\"type\":\"uint256\"}],\"name\":\"listMyNFTToSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"bidForNFT(address,uint256,uint256)\":{\"details\":\"Submit the asking price in order to complete the bid on ( msg value )\",\"params\":{\"_bidPrice\":\"The price that is bigger than the initial price and last bid price is on this action\",\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"cancelAuction(address,uint256)\":{\"details\":\"Only seller can cancel\",\"params\":{\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"finishAuction(address,uint256)\":{\"details\":\"Only seller can cancel , Call this func after auction is closed\",\"params\":{\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"getAuctionDetails(address,uint256)\":{\"params\":{\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"listMyNFTToSale(address,uint256,uint256,uint256)\":{\"details\":\"Call approve function of Nft Contract before the call this func\",\"params\":{\"_auctionDuration\":\"The period of time (timestamp) each user can bid on an action\",\"_initialPrice\":\"The initial price value that can be bid on an action\",\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"},\"returns\":{\"_0\":\"True if auction is added successfully\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bidForNFT(address,uint256,uint256)\":{\"notice\":\"Bid on an auction to get a NFT\"},\"cancelAuction(address,uint256)\":{\"notice\":\"Cancel an auction\"},\"finishAuction(address,uint256)\":{\"notice\":\"Finish an auction\"},\"getAuctionDetails(address,uint256)\":{\"notice\":\"Returns an auction details\"},\"listMyNFTToSale(address,uint256,uint256,uint256)\":{\"notice\":\"List NFT to auction List for sale\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace/GhafNftMarketPlace.sol\":\"GhafNftMarketPlace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Marketplace/GhafNftMarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IGhafNftMarketPlace.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract GhafNftMarketPlace is IGhafNftMarketPlace, Ownable {\\n    modifier nonZeroAddress(address _address) {\\n        require(_address != address(0), \\\"GhafNftMarketPlace: zero address\\\");\\n        _;\\n    }\\n\\n    modifier nonZeroValue(uint _value) {\\n        require(_value > 0, \\\"GhafNftMarketPlace: zero value\\\");\\n        _;\\n    }\\n\\n    mapping(address => mapping(uint256 => Auction)) public auctions;\\n\\n    /// @notice                    Returns an auction details\\n    /// @param _nftContractAddress Address of NFT token contract\\n    /// @param _tokenId            A number that identify the NFT within the NFT token contract\\n    function getAuctionDetails(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    )\\n        external\\n        view\\n        override\\n        nonZeroAddress(_nftContractAddress)\\n        returns (Auction memory auction)\\n    {\\n        auction = auctions[_nftContractAddress][_tokenId];\\n    }\\n\\n    /// @notice                     List NFT to auction List for sale\\n    /// @dev                        Call approve function of Nft Contract before the call this func\\n    /// @param _nftContractAddress  Address of NFT token contract\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\n    /// @param _initialPrice        The initial price value that can be bid on an action\\n    /// @param _auctionDuration     The period of time (timestamp) each user can bid on an action\\n    /// @return                     True if auction is added successfully\\n    function listMyNFTToSale(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _initialPrice,\\n        uint256 _auctionDuration\\n    )\\n        external\\n        override\\n        nonZeroAddress(_nftContractAddress)\\n        nonZeroValue(_initialPrice)\\n        returns (bool)\\n    {\\n        IERC721(_nftContractAddress).transferFrom(\\n            _msgSender(),\\n            address(this),\\n            _tokenId\\n        );\\n\\n        Auction memory item;\\n        item.seller = _msgSender();\\n        item.owner = address(this);\\n        item.initialPrice = _initialPrice;\\n        item.closeTimestamp = block.timestamp + _auctionDuration;\\n\\n        auctions[_nftContractAddress][_tokenId] = item;\\n\\n        emit AuctionCreated(\\n            item.seller,\\n            item.owner,\\n            item.initialPrice,\\n            item.highestBidder,\\n            item.highestBid,\\n            item.closeTimestamp,\\n            item.tokenId,\\n            item.nftContractAddress\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @notice                     Bid on an auction to get a NFT\\n    /// @dev                        Submit the asking price in order to complete the bid on ( msg value )\\n    /// @param _nftContractAddress  Address of NFT token contract\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\n    /// @param _bidPrice            The price that is bigger than the initial price and last bid price is on this action\\n    function bidForNFT(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _bidPrice\\n    )\\n        external\\n        payable\\n        override\\n        nonZeroAddress(_nftContractAddress)\\n        nonZeroValue(_bidPrice)\\n        returns (bool)\\n    {\\n        Auction memory auctionItem = auctions[_nftContractAddress][_tokenId];\\n\\n        require(\\n            block.timestamp < auctionItem.closeTimestamp,\\n            \\\"auction is closed\\\"\\n        );\\n\\n        require(\\n            _bidPrice > auctionItem.highestBid &&\\n                _bidPrice >= auctionItem.initialPrice,\\n            \\\"bid price is low\\\"\\n        );\\n\\n        require(\\n            msg.value == _bidPrice,\\n            \\\"please submit the asking price in order to complete the bid, incompatible msg value\\\"\\n        );\\n\\n        if (auctionItem.highestBidder != address(0)) {\\n            Address.sendValue(\\n                payable(auctionItem.highestBidder),\\n                auctionItem.highestBid\\n            );\\n        }\\n\\n        auctions[_nftContractAddress][_tokenId].highestBidder = _msgSender();\\n        auctions[_nftContractAddress][_tokenId].highestBid = _bidPrice;\\n\\n        emit BidCreated(_msgSender(), _bidPrice, _tokenId, _nftContractAddress);\\n\\n        return true;\\n    }\\n\\n    /// @notice                    Cancel an auction\\n    /// @dev                       Only seller can cancel\\n    /// @param _nftContractAddress Address of NFT token contract\\n    /// @param _tokenId            A number that identify the NFT within the NFT token contract\\n    function cancelAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    )\\n        external\\n        payable\\n        override\\n        nonZeroAddress(_nftContractAddress)\\n        returns (bool success)\\n    {\\n        Auction memory auctionItem = auctions[_nftContractAddress][_tokenId];\\n\\n        require(_msgSender() == auctionItem.seller, \\\"only seller can cancel\\\");\\n\\n        require(\\n            block.timestamp < auctionItem.closeTimestamp,\\n            \\\"auction is closed\\\"\\n        );\\n\\n        if (auctionItem.highestBidder != address(0)) {\\n            Address.sendValue(\\n                payable(auctionItem.highestBidder),\\n                auctionItem.highestBid\\n            );\\n        }\\n        IERC721(_nftContractAddress).transferFrom(\\n            address(this),\\n            auctionItem.seller,\\n            _tokenId\\n        );\\n\\n        emit AuctionCancelled(_nftContractAddress, _tokenId, _msgSender());\\n\\n        delete auctions[_nftContractAddress][_tokenId];\\n\\n        return true;\\n    }\\n\\n    /// @notice                      Finish an auction\\n    /// @dev                         Only seller can cancel , Call this func after auction is closed\\n    /// @param _nftContractAddress   Address of NFT token contract\\n    /// @param _tokenId              A number that identify the NFT within the NFT token contract\\n    function finishAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    )\\n        external\\n        payable\\n        override\\n        nonZeroAddress(_nftContractAddress)\\n        returns (bool)\\n    {\\n        Auction memory auctionItem = auctions[_nftContractAddress][_tokenId];\\n\\n        require(\\n            block.timestamp > auctionItem.closeTimestamp,\\n            \\\"auction is not closed yet\\\"\\n        );\\n\\n        if (auctionItem.highestBidder != address(0)) {\\n            Address.sendValue(\\n                payable(auctionItem.seller),\\n                auctionItem.highestBid\\n            );\\n\\n            //TODO update fee management\\n\\n            // Address.sendValue(\\n            //     payable(auctionItem.seller),\\n            //     (auctionItem.highestBid * 99) / 100\\n            // );\\n            // Address.sendValue(payable(owner()), auctionItem.highestBid / 100);\\n\\n            IERC721(_nftContractAddress).transferFrom(\\n                address(this),\\n                auctionItem.highestBidder,\\n                _tokenId\\n            );\\n        } else {\\n            IERC721(_nftContractAddress).transferFrom(\\n                address(this),\\n                auctionItem.seller,\\n                _tokenId\\n            );\\n        }\\n\\n        emit AuctionFinished(\\n            _nftContractAddress,\\n            _tokenId,\\n            _msgSender(),\\n            auctionItem.highestBidder,\\n            auctionItem.highestBid\\n        );\\n\\n        delete auctions[_nftContractAddress][_tokenId];\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xf790406f9d3b4b16e98fdeb483cd060d6eaf072f9e9380a7b6fd44dd5e7d0a36\",\"license\":\"GPL-3.0\"},\"contracts/Marketplace/interfaces/IGhafNftMarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IGhafNftMarketPlace {\\n    // Struct\\n\\n    struct Auction {\\n        address seller;\\n        address owner;\\n        uint256 initialPrice;\\n        address highestBidder;\\n        uint256 highestBid;\\n        uint256 closeTimestamp;\\n        uint256 tokenId;\\n        address nftContractAddress;\\n    }\\n\\n    // Events\\n\\n    event AuctionCreated(\\n        address seller,\\n        address owner,\\n        uint256 initialPrice,\\n        address highestBidder,\\n        uint256 highestBid,\\n        uint256 closeTimestamp,\\n        uint256 indexed tokenId,\\n        address nftContractAddress\\n    );\\n\\n    event AuctionCancelled(\\n        address nftContractAddress,\\n        uint256 indexed tokenId,\\n        address seller\\n    );\\n\\n    event AuctionFinished(\\n        address nftContractAddress,\\n        uint256 indexed tokenId,\\n        address finisher,\\n        address highestBidder,\\n        uint256 highestBid\\n    );\\n\\n    event BidCreated(\\n        address bidder,\\n        uint256 bidPrice,\\n        uint256 indexed tokenId,\\n        address nftContractAddress\\n    );\\n\\n    // Read-only functions\\n\\n    function getAuctionDetails(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) external view returns (Auction memory);\\n\\n    // State-changing functions\\n\\n    function listMyNFTToSale(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _initialPrice,\\n        uint256 _auctionDuration\\n    ) external returns (bool);\\n\\n    function bidForNFT(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _bidPrice\\n    ) external payable returns (bool);\\n\\n    function cancelAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) external payable returns (bool);\\n\\n    function finishAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) external payable returns (bool);\\n}\\n\",\"keccak256\":\"0xece291308b95d7850c77afe9e3daa8e3900250dbe9f67707fcece1f7ddb78e4f\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111988061007e6000396000f3fe6080604052600436106100865760003560e01c8063857c7b5e11610059578063857c7b5e14610229578063859b97fe1461023c5780638da5cb5b1461024f578063a3ed5be614610277578063f2fde38b1461028a57600080fd5b80630cd87c681461008b5780631bc010b51461012057806344f91c1e14610150578063715018a614610212575b600080fd5b34801561009757600080fd5b506100ab6100a636600461102a565b6102aa565b604051610117919081516001600160a01b039081168252602080840151821690830152604080840151908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b60405180910390f35b34801561012c57600080fd5b5061014061013b366004611054565b61036b565b6040519015158152602001610117565b34801561015c57600080fd5b506101c861016b36600461102a565b60016020818152600093845260408085209091529183529120805491810154600282015460038301546004840154600585015460068601546007909601546001600160a01b03978816979586169694959384169492939192911688565b604080516001600160a01b03998a16815297891660208901528701959095529286166060860152608085019190915260a084015260c083015290911660e082015261010001610117565b34801561021e57600080fd5b5061022761059d565b005b61014061023736600461108d565b6105b1565b61014061024a36600461102a565b610890565b34801561025b57600080fd5b506000546040516001600160a01b039091168152602001610117565b61014061028536600461102a565b610b19565b34801561029657600080fd5b506102276102a53660046110c0565b610d64565b6102b2610fa5565b826001600160a01b0381166102e25760405162461bcd60e51b81526004016102d9906110e2565b60405180910390fd5b50506001600160a01b039182166000908152600160208181526040808420948452938152918390208351610100810185528154861681529181015485169282019290925260028201549281019290925260038101548316606083015260048101546080830152600581015460a0830152600681015460c08301526007015490911660e082015290565b6000846001600160a01b0381166103945760405162461bcd60e51b81526004016102d9906110e2565b83600081116103e55760405162461bcd60e51b815260206004820152601e60248201527f476861664e66744d61726b6574506c6163653a207a65726f2076616c7565000060448201526064016102d9565b6040516323b872dd60e01b81526001600160a01b038816906323b872dd9061041590339030908b90600401611117565b600060405180830381600087803b15801561042f57600080fd5b505af1158015610443573d6000803e3d6000fd5b5050505061044f610fa5565b33815230602082015260408101869052610469854261113b565b60a082019081526001600160a01b03808a1660009081526001602081815260408084208d8552825292839020865181548187166001600160a01b031991821617835592880151938201805485881690851617905584880151600283018190556060890151600384018054828a1690871617905560808a01516004850181905598516005850181905560c08b01516006860181905560e08c0151600790960180549a87169a90971699909917909555955196977fde3c204494cc4366a9f971bd11df087a500d8363a03685c69521004da52fc3fd97610587979396959294919291906001600160a01b039788168152958716602087015260408601949094529185166060850152608084015260a083015290911660c082015260e00190565b60405180910390a2506001979650505050505050565b6105a5610ddd565b6105af6000610e37565b565b6000836001600160a01b0381166105da5760405162461bcd60e51b81526004016102d9906110e2565b826000811161062b5760405162461bcd60e51b815260206004820152601e60248201527f476861664e66744d61726b6574506c6163653a207a65726f2076616c7565000060448201526064016102d9565b6001600160a01b0380871660009081526001602081815260408084208a85528252928390208351610100810185528154861681529281015485169183019190915260028101549282019290925260038201548316606082015260048201546080820152600582015460a08201819052600683015460c083015260079092015490921660e083015242106106f45760405162461bcd60e51b8152602060048201526011602482015270185d58dd1a5bdb881a5cc818db1bdcd959607a1b60448201526064016102d9565b80608001518511801561070b575080604001518510155b61074a5760405162461bcd60e51b815260206004820152601060248201526f626964207072696365206973206c6f7760801b60448201526064016102d9565b8434146107db5760405162461bcd60e51b815260206004820152605360248201527f706c65617365207375626d6974207468652061736b696e67207072696365206960448201527f6e206f7264657220746f20636f6d706c65746520746865206269642c20696e636064820152726f6d70617469626c65206d73672076616c756560681b608482015260a4016102d9565b60608101516001600160a01b0316156108005761080081606001518260800151610e87565b6001600160a01b03871660008181526001602090815260408083208a84528252918290206003810180546001600160a01b0319163390811790915560049091018990558251908152908101889052808201929092525187917ff45e391a3dce1c0ecbf18142101402277c0e549b92722f631c21cc2f0857b656919081900360600190a25060019695505050505050565b6000826001600160a01b0381166108b95760405162461bcd60e51b81526004016102d9906110e2565b6001600160a01b038481166000908152600160208181526040808420888552825292839020835161010081018552815486168082529382015486169281019290925260028101549382019390935260038301548416606082015260048301546080820152600583015460a0820152600683015460c082015260079092015490921660e08201529033146109875760405162461bcd60e51b81526020600482015260166024820152751bdb9b1e481cd95b1b195c8818d85b8818d85b98d95b60521b60448201526064016102d9565b8060a0015142106109ce5760405162461bcd60e51b8152602060048201526011602482015270185d58dd1a5bdb881a5cc818db1bdcd959607a1b60448201526064016102d9565b60608101516001600160a01b0316156109f3576109f381606001518260800151610e87565b80516040516323b872dd60e01b81526001600160a01b038716916323b872dd91610a239130918990600401611117565b600060405180830381600087803b158015610a3d57600080fd5b505af1158015610a51573d6000803e3d6000fd5b50505050837f81ac9b9393c688a58e4829f289ada7a9a0ef6b193b25950986416ef84025becd86610a7f3390565b604080516001600160a01b039384168152929091166020830152015b60405180910390a25050506001600160a01b0391909116600090815260016020818152604080842094845293905291812080546001600160a01b031990811682558184018054821690556002820183905560038201805482169055600482018390556005820183905560068201929092556007018054909116905590565b6000826001600160a01b038116610b425760405162461bcd60e51b81526004016102d9906110e2565b6001600160a01b0380851660009081526001602081815260408084208885528252928390208351610100810185528154861681529281015485169183019190915260028101549282019290925260038201548316606082015260048201546080820152600582015460a08201819052600683015460c083015260079092015490921660e08301524211610c175760405162461bcd60e51b815260206004820152601960248201527f61756374696f6e206973206e6f7420636c6f736564207965740000000000000060448201526064016102d9565b60608101516001600160a01b031615610ca657610c3c81600001518260800151610e87565b60608101516040516323b872dd60e01b81526001600160a01b038716916323b872dd91610c6f9130918990600401611117565b600060405180830381600087803b158015610c8957600080fd5b505af1158015610c9d573d6000803e3d6000fd5b50505050610d09565b80516040516323b872dd60e01b81526001600160a01b038716916323b872dd91610cd69130918990600401611117565b600060405180830381600087803b158015610cf057600080fd5b505af1158015610d04573d6000803e3d6000fd5b505050505b606081810151608080840151604080516001600160a01b03808c168252336020830152909416908401529282019290925285917f77720fd952a80dc4ee2bb00dcaa69bb9eb3d9f04493afdd1fa6bc510318d112c9101610a9b565b610d6c610ddd565b6001600160a01b038116610dd15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d9565b610dda81610e37565b50565b6000546001600160a01b031633146105af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80471015610ed75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102d9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f24576040519150601f19603f3d011682016040523d82523d6000602084013e610f29565b606091505b5050905080610fa05760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102d9565b505050565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b80356001600160a01b038116811461102557600080fd5b919050565b6000806040838503121561103d57600080fd5b6110468361100e565b946020939093013593505050565b6000806000806080858703121561106a57600080fd5b6110738561100e565b966020860135965060408601359560600135945092505050565b6000806000606084860312156110a257600080fd5b6110ab8461100e565b95602085013595506040909401359392505050565b6000602082840312156110d257600080fd5b6110db8261100e565b9392505050565b6020808252818101527f476861664e66744d61726b6574506c6163653a207a65726f2061646472657373604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b8082018082111561115c57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212208a4ed8176f34e46f1b1f0accc7bd27aef0bd7c747ba0afbc60a41e8b9b34a49c64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063857c7b5e11610059578063857c7b5e14610229578063859b97fe1461023c5780638da5cb5b1461024f578063a3ed5be614610277578063f2fde38b1461028a57600080fd5b80630cd87c681461008b5780631bc010b51461012057806344f91c1e14610150578063715018a614610212575b600080fd5b34801561009757600080fd5b506100ab6100a636600461102a565b6102aa565b604051610117919081516001600160a01b039081168252602080840151821690830152604080840151908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b60405180910390f35b34801561012c57600080fd5b5061014061013b366004611054565b61036b565b6040519015158152602001610117565b34801561015c57600080fd5b506101c861016b36600461102a565b60016020818152600093845260408085209091529183529120805491810154600282015460038301546004840154600585015460068601546007909601546001600160a01b03978816979586169694959384169492939192911688565b604080516001600160a01b03998a16815297891660208901528701959095529286166060860152608085019190915260a084015260c083015290911660e082015261010001610117565b34801561021e57600080fd5b5061022761059d565b005b61014061023736600461108d565b6105b1565b61014061024a36600461102a565b610890565b34801561025b57600080fd5b506000546040516001600160a01b039091168152602001610117565b61014061028536600461102a565b610b19565b34801561029657600080fd5b506102276102a53660046110c0565b610d64565b6102b2610fa5565b826001600160a01b0381166102e25760405162461bcd60e51b81526004016102d9906110e2565b60405180910390fd5b50506001600160a01b039182166000908152600160208181526040808420948452938152918390208351610100810185528154861681529181015485169282019290925260028201549281019290925260038101548316606083015260048101546080830152600581015460a0830152600681015460c08301526007015490911660e082015290565b6000846001600160a01b0381166103945760405162461bcd60e51b81526004016102d9906110e2565b83600081116103e55760405162461bcd60e51b815260206004820152601e60248201527f476861664e66744d61726b6574506c6163653a207a65726f2076616c7565000060448201526064016102d9565b6040516323b872dd60e01b81526001600160a01b038816906323b872dd9061041590339030908b90600401611117565b600060405180830381600087803b15801561042f57600080fd5b505af1158015610443573d6000803e3d6000fd5b5050505061044f610fa5565b33815230602082015260408101869052610469854261113b565b60a082019081526001600160a01b03808a1660009081526001602081815260408084208d8552825292839020865181548187166001600160a01b031991821617835592880151938201805485881690851617905584880151600283018190556060890151600384018054828a1690871617905560808a01516004850181905598516005850181905560c08b01516006860181905560e08c0151600790960180549a87169a90971699909917909555955196977fde3c204494cc4366a9f971bd11df087a500d8363a03685c69521004da52fc3fd97610587979396959294919291906001600160a01b039788168152958716602087015260408601949094529185166060850152608084015260a083015290911660c082015260e00190565b60405180910390a2506001979650505050505050565b6105a5610ddd565b6105af6000610e37565b565b6000836001600160a01b0381166105da5760405162461bcd60e51b81526004016102d9906110e2565b826000811161062b5760405162461bcd60e51b815260206004820152601e60248201527f476861664e66744d61726b6574506c6163653a207a65726f2076616c7565000060448201526064016102d9565b6001600160a01b0380871660009081526001602081815260408084208a85528252928390208351610100810185528154861681529281015485169183019190915260028101549282019290925260038201548316606082015260048201546080820152600582015460a08201819052600683015460c083015260079092015490921660e083015242106106f45760405162461bcd60e51b8152602060048201526011602482015270185d58dd1a5bdb881a5cc818db1bdcd959607a1b60448201526064016102d9565b80608001518511801561070b575080604001518510155b61074a5760405162461bcd60e51b815260206004820152601060248201526f626964207072696365206973206c6f7760801b60448201526064016102d9565b8434146107db5760405162461bcd60e51b815260206004820152605360248201527f706c65617365207375626d6974207468652061736b696e67207072696365206960448201527f6e206f7264657220746f20636f6d706c65746520746865206269642c20696e636064820152726f6d70617469626c65206d73672076616c756560681b608482015260a4016102d9565b60608101516001600160a01b0316156108005761080081606001518260800151610e87565b6001600160a01b03871660008181526001602090815260408083208a84528252918290206003810180546001600160a01b0319163390811790915560049091018990558251908152908101889052808201929092525187917ff45e391a3dce1c0ecbf18142101402277c0e549b92722f631c21cc2f0857b656919081900360600190a25060019695505050505050565b6000826001600160a01b0381166108b95760405162461bcd60e51b81526004016102d9906110e2565b6001600160a01b038481166000908152600160208181526040808420888552825292839020835161010081018552815486168082529382015486169281019290925260028101549382019390935260038301548416606082015260048301546080820152600583015460a0820152600683015460c082015260079092015490921660e08201529033146109875760405162461bcd60e51b81526020600482015260166024820152751bdb9b1e481cd95b1b195c8818d85b8818d85b98d95b60521b60448201526064016102d9565b8060a0015142106109ce5760405162461bcd60e51b8152602060048201526011602482015270185d58dd1a5bdb881a5cc818db1bdcd959607a1b60448201526064016102d9565b60608101516001600160a01b0316156109f3576109f381606001518260800151610e87565b80516040516323b872dd60e01b81526001600160a01b038716916323b872dd91610a239130918990600401611117565b600060405180830381600087803b158015610a3d57600080fd5b505af1158015610a51573d6000803e3d6000fd5b50505050837f81ac9b9393c688a58e4829f289ada7a9a0ef6b193b25950986416ef84025becd86610a7f3390565b604080516001600160a01b039384168152929091166020830152015b60405180910390a25050506001600160a01b0391909116600090815260016020818152604080842094845293905291812080546001600160a01b031990811682558184018054821690556002820183905560038201805482169055600482018390556005820183905560068201929092556007018054909116905590565b6000826001600160a01b038116610b425760405162461bcd60e51b81526004016102d9906110e2565b6001600160a01b0380851660009081526001602081815260408084208885528252928390208351610100810185528154861681529281015485169183019190915260028101549282019290925260038201548316606082015260048201546080820152600582015460a08201819052600683015460c083015260079092015490921660e08301524211610c175760405162461bcd60e51b815260206004820152601960248201527f61756374696f6e206973206e6f7420636c6f736564207965740000000000000060448201526064016102d9565b60608101516001600160a01b031615610ca657610c3c81600001518260800151610e87565b60608101516040516323b872dd60e01b81526001600160a01b038716916323b872dd91610c6f9130918990600401611117565b600060405180830381600087803b158015610c8957600080fd5b505af1158015610c9d573d6000803e3d6000fd5b50505050610d09565b80516040516323b872dd60e01b81526001600160a01b038716916323b872dd91610cd69130918990600401611117565b600060405180830381600087803b158015610cf057600080fd5b505af1158015610d04573d6000803e3d6000fd5b505050505b606081810151608080840151604080516001600160a01b03808c168252336020830152909416908401529282019290925285917f77720fd952a80dc4ee2bb00dcaa69bb9eb3d9f04493afdd1fa6bc510318d112c9101610a9b565b610d6c610ddd565b6001600160a01b038116610dd15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d9565b610dda81610e37565b50565b6000546001600160a01b031633146105af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80471015610ed75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102d9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f24576040519150601f19603f3d011682016040523d82523d6000602084013e610f29565b606091505b5050905080610fa05760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102d9565b505050565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b80356001600160a01b038116811461102557600080fd5b919050565b6000806040838503121561103d57600080fd5b6110468361100e565b946020939093013593505050565b6000806000806080858703121561106a57600080fd5b6110738561100e565b966020860135965060408601359560600135945092505050565b6000806000606084860312156110a257600080fd5b6110ab8461100e565b95602085013595506040909401359392505050565b6000602082840312156110d257600080fd5b6110db8261100e565b9392505050565b6020808252818101527f476861664e66744d61726b6574506c6163653a207a65726f2061646472657373604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b8082018082111561115c57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212208a4ed8176f34e46f1b1f0accc7bd27aef0bd7c747ba0afbc60a41e8b9b34a49c64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "bidForNFT(address,uint256,uint256)": {
        "details": "Submit the asking price in order to complete the bid on ( msg value )",
        "params": {
          "_bidPrice": "The price that is bigger than the initial price and last bid price is on this action",
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "cancelAuction(address,uint256)": {
        "details": "Only seller can cancel",
        "params": {
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "finishAuction(address,uint256)": {
        "details": "Only seller can cancel , Call this func after auction is closed",
        "params": {
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "getAuctionDetails(address,uint256)": {
        "params": {
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "listMyNFTToSale(address,uint256,uint256,uint256)": {
        "details": "Call approve function of Nft Contract before the call this func",
        "params": {
          "_auctionDuration": "The period of time (timestamp) each user can bid on an action",
          "_initialPrice": "The initial price value that can be bid on an action",
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        },
        "returns": {
          "_0": "True if auction is added successfully"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "bidForNFT(address,uint256,uint256)": {
        "notice": "Bid on an auction to get a NFT"
      },
      "cancelAuction(address,uint256)": {
        "notice": "Cancel an auction"
      },
      "finishAuction(address,uint256)": {
        "notice": "Finish an auction"
      },
      "getAuctionDetails(address,uint256)": {
        "notice": "Returns an auction details"
      },
      "listMyNFTToSale(address,uint256,uint256,uint256)": {
        "notice": "List NFT to auction List for sale"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3011,
        "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
        "label": "auctions",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)3456_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)3456_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct IGhafNftMarketPlace.Auction))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Auction)3456_storage)"
      },
      "t_mapping(t_uint256,t_struct(Auction)3456_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IGhafNftMarketPlace.Auction)",
        "numberOfBytes": "32",
        "value": "t_struct(Auction)3456_storage"
      },
      "t_struct(Auction)3456_storage": {
        "encoding": "inplace",
        "label": "struct IGhafNftMarketPlace.Auction",
        "members": [
          {
            "astId": 3441,
            "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3443,
            "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3445,
            "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
            "label": "initialPrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3447,
            "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
            "label": "highestBidder",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 3449,
            "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
            "label": "highestBid",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3451,
            "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
            "label": "closeTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3453,
            "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
            "label": "tokenId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 3455,
            "contract": "contracts/Marketplace/GhafNftMarketPlace.sol:GhafNftMarketPlace",
            "label": "nftContractAddress",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}