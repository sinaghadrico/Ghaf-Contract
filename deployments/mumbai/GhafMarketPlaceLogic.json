{
  "address": "0x6a24A365D715BF61Dd82D6b158dbCfFb69558F80",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidIdx",
          "type": "uint256"
        }
      ],
      "name": "BidAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidIdx",
          "type": "uint256"
        }
      ],
      "name": "BidCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidIdx",
          "type": "uint256"
        }
      ],
      "name": "BidRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidIdx",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "BidUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidIdx",
          "type": "uint256"
        }
      ],
      "name": "NewBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "NftDelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum GhafMarketPlaceLib.BuyTypes",
          "name": "buyType",
          "type": "uint8"
        }
      ],
      "name": "NftListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum GhafMarketPlaceLib.BuyTypes",
          "name": "buyType",
          "type": "uint8"
        }
      ],
      "name": "NftSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_PROTOCOL_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NATIVE_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bidIdx",
          "type": "uint256"
        }
      ],
      "name": "acceptBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bids",
      "outputs": [
        {
          "internalType": "address",
          "name": "buyerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isAccepted",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_paymentToken",
          "type": "address"
        }
      ],
      "name": "buyNft",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bidIdx",
          "type": "uint256"
        }
      ],
      "name": "cancelBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "delistNft",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bidIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newAmount",
          "type": "uint256"
        }
      ],
      "name": "increaseBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "enum GhafMarketPlaceLib.BuyTypes",
          "name": "_buyType",
          "type": "uint8"
        }
      ],
      "name": "listNft",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isSold",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "hasAccepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isListed",
          "type": "bool"
        },
        {
          "internalType": "enum GhafMarketPlaceLib.BuyTypes",
          "name": "buyType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_paymentToken",
          "type": "address"
        }
      ],
      "name": "putBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_bidIdx",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd699b2980d315283acf1e0d7a8daabac471c4868f7502f68de9a8ecfb1e53368",
  "receipt": {
    "to": null,
    "from": "0x5364E3557572bd5D5903C0e9C21BE359F2Eac1dA",
    "contractAddress": "0x6a24A365D715BF61Dd82D6b158dbCfFb69558F80",
    "transactionIndex": 0,
    "gasUsed": "2356196",
    "logsBloom": "0x00000000000000020000000000000000000000000000000000000000000000040040000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000800000000000000000000100000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000020000000000000000001000000000000000000000000004000000000000000000001000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0xec4a1494f127b192b79dbb4ef5b0db118dbc2fab93a571350cf8a587242c4bc4",
    "transactionHash": "0xd699b2980d315283acf1e0d7a8daabac471c4868f7502f68de9a8ecfb1e53368",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 40474976,
        "transactionHash": "0xd699b2980d315283acf1e0d7a8daabac471c4868f7502f68de9a8ecfb1e53368",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005364e3557572bd5d5903c0e9c21be359f2eac1da",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001a28b638df405a40000000000000000000000000000000000000000000000020bc9a72d13ea49420000000000000000000000000000000000000000000021e9393d8079ff2cb78c0000000000000000000000000000000000000000000000020a271bc985f6439e0000000000000000000000000000000000000000000021e93ae00bdd8d20bd30",
        "logIndex": 0,
        "blockHash": "0xec4a1494f127b192b79dbb4ef5b0db118dbc2fab93a571350cf8a587242c4bc4"
      }
    ],
    "blockNumber": 40474976,
    "cumulativeGasUsed": "2356196",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0184becd2248ac4c4a3bc647b353cb21",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidIdx\",\"type\":\"uint256\"}],\"name\":\"BidAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidIdx\",\"type\":\"uint256\"}],\"name\":\"BidCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidIdx\",\"type\":\"uint256\"}],\"name\":\"BidRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidIdx\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"BidUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidIdx\",\"type\":\"uint256\"}],\"name\":\"NewBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"NftDelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum GhafMarketPlaceLib.BuyTypes\",\"name\":\"buyType\",\"type\":\"uint8\"}],\"name\":\"NftListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum GhafMarketPlaceLib.BuyTypes\",\"name\":\"buyType\",\"type\":\"uint8\"}],\"name\":\"NftSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIdx\",\"type\":\"uint256\"}],\"name\":\"acceptBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAccepted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"name\":\"buyNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIdx\",\"type\":\"uint256\"}],\"name\":\"cancelBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"delistNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newAmount\",\"type\":\"uint256\"}],\"name\":\"increaseBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum GhafMarketPlaceLib.BuyTypes\",\"name\":\"_buyType\",\"type\":\"uint8\"}],\"name\":\"listNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSold\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasAccepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"enum GhafMarketPlaceLib.BuyTypes\",\"name\":\"buyType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"name\":\"putBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidIdx\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptBid(address,uint256,uint256)\":{\"details\":\"Will be reverted if the seller has already accepted a bid\",\"params\":{\"_bidIdx\":\"Index of the bid in bids list\",\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"buyNft(address,uint256,uint256,address)\":{\"params\":{\"_amount\":\"Amount of buyer's pay\",\"_nftContractAddress\":\"Address of NFT token contract\",\"_paymentToken\":\"Address of token that buyer uses for payment\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"cancelBid(address,uint256,uint256)\":{\"details\":\"Only bid owner can call this function\",\"params\":{\"_bidIdx\":\"Index of the bid in bids list\",\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"delistNft(address,uint256)\":{\"details\":\"Revokes all the existing bids                             Reverts if the seller has accepted a bid or sold it\",\"params\":{\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"increaseBid(address,uint256,uint256,uint256)\":{\"details\":\"Reverts if the new amount is lower than the previous amount                             User sends the bid difference\",\"params\":{\"_bidIdx\":\"of the buyer\",\"_newAmount\":\"of bid\",\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"listNft(address,uint256,uint8)\":{\"details\":\"Call approve function of Nft Contract before the call this funcJust owner of nft can call this func\",\"params\":{\"_buyType\":\"Type of Buy nft (e.g. BUYNOW or AUCTION )\",\"_nftContractAddress\":\"Address of NFT token contract\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only owner can pause \"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"putBid(address,uint256,uint256,address)\":{\"details\":\"User sends the bid amount along with the request\",\"params\":{\"_amount\":\"Amount of buyer's bid\",\"_nftContractAddress\":\"Address of NFT token contract\",\"_paymentToken\":\"Address of token that buyer uses for payment\",\"_tokenId\":\"A number that identify the NFT within the NFT token contract\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only owner can pause\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptBid(address,uint256,uint256)\":{\"notice\":\"Accepts one of the existing bids & Sends funds to seller & Send Nft to Buyer\"},\"buyNft(address,uint256,uint256,address)\":{\"notice\":\"Puts amount for buyying an Nft & Sends funds to seller & Send Nft to Buyer\"},\"cancelBid(address,uint256,uint256)\":{\"notice\":\"Removes buyer's bid\"},\"delistNft(address,uint256)\":{\"notice\":\"Delists an Nft\"},\"increaseBid(address,uint256,uint256,uint256)\":{\"notice\":\"Increases the existing bid amount\"},\"listNft(address,uint256,uint8)\":{\"notice\":\"Lists Nft of a user\"},\"pause()\":{\"notice\":\"Pause the contract so only the functions can be called which are whenPaused\"},\"putBid(address,uint256,uint256,address)\":{\"notice\":\"Puts bid for buyying an Nft\"},\"setProtocolFee(uint256)\":{\"notice\":\"Setter for protocol fee\"},\"setTreasury(address)\":{\"notice\":\"Setter for treasury address\"},\"unpause()\":{\"notice\":\"Unpause the contract so only the functions can be called which are whenNotPaused\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GhafMarketplace/GhafMarketPlaceLogic.sol\":\"GhafMarketPlaceLogic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/GhafMarketplace/GhafMarketPlaceLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\n\\r\\n\\r\\nlibrary GhafMarketPlaceLib {\\r\\n\\r\\n    // Structures\\r\\n\\r\\n    enum BuyTypes {\\r\\n        BUYNOW, // BUYNOW\\r\\n        AUCTION //AUCTION                    \\r\\n    }\\r\\n\\r\\n\\r\\n    /// @notice Structure for storing Nft data\\r\\n    /// @param seller Address of seller \\r\\n    /// @param isSold True if the Nft is sold\\r\\n    /// @param hasAccepted True if the seller accepted one of the bids\\r\\n    /// @param buyType Type of Buy nft (e.g. BUYNOW or AUCTION )\\r\\n\\tstruct Nft {\\r\\n        address seller;\\r\\n        bool isSold;\\r\\n        bool hasAccepted;\\r\\n        bool isListed;\\r\\n        BuyTypes buyType;\\r\\n  \\t}\\r\\n\\r\\n    /// @notice Structure for recording buyers bids\\r\\n    /// @param buyerAddress Buyer can withdraw ETH to this address\\r\\n    /// @param bidAmount Amount of buyre's bid\\r\\n    /// @param isAccepted True if the bid is accepted by seller\\r\\n    /// @param paymentToken Address of token that buyer uses for payment\\r\\n\\tstruct Bid {\\r\\n\\t\\taddress buyerAddress;\\r\\n\\t\\tuint bidAmount;\\r\\n        bool isAccepted;\\r\\n        address paymentToken;\\r\\n  \\t}\\r\\n\\r\\n    function listNftHelper(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        BuyTypes _buyType,\\r\\n        mapping(address =>  mapping(uint => Nft)) storage nfts,\\r\\n        address _seller\\r\\n    ) external  {\\r\\n        require(\\r\\n            !nfts[_nftContractAddress][_tokenId].isListed, \\r\\n            \\\"GhafMarketPlace: already listed\\\"\\r\\n        );\\r\\n\\r\\n        // Saves listed Nft\\r\\n        Nft memory _nft;\\r\\n        _nft.seller = _seller;\\r\\n        _nft.isListed = true;\\r\\n        _nft.buyType = _buyType;\\r\\n        nfts[_nftContractAddress][_tokenId] = _nft;\\r\\n    }\\r\\n\\r\\n    function delistNftHelper(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        mapping(address  => mapping(uint => Nft)) storage nfts,\\r\\n        address _seller\\r\\n    ) external view {\\r\\n        require(nfts[_nftContractAddress][_tokenId].isListed, \\\"GhafMarketPlace: no nft\\\");\\r\\n        require(nfts[_nftContractAddress][_tokenId].seller == _seller, \\\"GhafMarketPlace: not owner\\\");\\r\\n        require(!nfts[_nftContractAddress][_tokenId].isSold, \\\"GhafMarketPlace: already sold\\\");\\r\\n        require(!nfts[_nftContractAddress][_tokenId].hasAccepted, \\\"GhafMarketPlace: already accepted\\\");\\r\\n    }\\r\\n\\r\\n    function putBidHelper(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        mapping(address  => mapping(uint => Nft)) storage nfts\\r\\n    ) external view {\\r\\n        _canBid(\\r\\n            nfts[_nftContractAddress][_tokenId].isListed, \\r\\n            nfts[_nftContractAddress][_tokenId].hasAccepted,\\r\\n            nfts[_nftContractAddress][_tokenId].isSold\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function increaseBidHelper(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        uint _bidIdx,\\r\\n        uint _newAmount,\\r\\n        mapping(address  => mapping(uint => Nft)) storage nfts,\\r\\n        mapping(address  => mapping(uint => Bid[])) storage bids,\\r\\n        address _seller\\r\\n    ) external view {\\r\\n        _canBid(\\r\\n            nfts[_nftContractAddress][_tokenId].isListed, \\r\\n            nfts[_nftContractAddress][_tokenId].hasAccepted,\\r\\n            nfts[_nftContractAddress][_tokenId].isSold\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            bids[_nftContractAddress][_tokenId][_bidIdx].buyerAddress == _seller, \\r\\n            \\\"GhafMarketPlace: not owner\\\"\\r\\n        );\\r\\n        require(\\r\\n            _newAmount > bids[_nftContractAddress][_tokenId][_bidIdx].bidAmount, \\r\\n            \\\"GhafMarketPlace: low amount\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n  \\r\\n\\r\\n    /// @notice Checks the bidding conditions\\r\\n    /// @dev Conditions for bidding: Nft exists, no offer accepted, not sold\\r\\n    function _canBid(\\r\\n        bool _isListed,\\r\\n        bool _hasAccepted,\\r\\n        bool _isSold\\r\\n    ) private pure {\\r\\n        require(_isListed, \\\"GhafMarketPlace: not listed\\\");\\r\\n        require(!_hasAccepted, \\\"GhafMarketPlace: already accepted\\\");\\r\\n        require(!_isSold, \\\"GhafMarketPlace: sold nft\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0x611f76b74f1fbadb34047c325c0c1a0438dd79eea084ce2cf7b1c78ecabb6666\",\"license\":\"MIT\"},\"contracts/GhafMarketplace/GhafMarketPlaceLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.8.4;\\r\\n\\r\\nimport \\\"./interfaces/IGhafMarketPlaceLogic.sol\\\";\\r\\nimport \\\"./GhafMarketPlaceStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\"; \\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\n// import \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\n\\r\\ncontract GhafMarketPlaceLogic is IGhafMarketPlaceLogic, GhafMarketPlaceStorage,\\r\\n    OwnableUpgradeable, PausableUpgradeable {\\r\\n\\r\\n    modifier nonZeroAddress(address _address) {\\r\\n        require(_address != address(0), \\\"GhafMarketPlace: address is zero\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function initialize(\\r\\n        uint _protocolFee,\\r\\n        address _treasury\\r\\n    ) public initializer {\\r\\n        OwnableUpgradeable.__Ownable_init();\\r\\n        // ReentrancyGuardUpgradeable.__ReentrancyGuard_init();\\r\\n        PausableUpgradeable.__Pausable_init();\\r\\n\\r\\n        setProtocolFee(_protocolFee);\\r\\n        setTreasury(_treasury);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n    \\r\\n\\r\\n    /// @notice Setter for treasury address\\r\\n    function setTreasury(address _treasury) public override nonZeroAddress(_treasury) onlyOwner {\\r\\n        treasury = _treasury;\\r\\n    }\\r\\n\\r\\n    /// @notice Setter for protocol fee\\r\\n    function setProtocolFee(uint _protocolFee) public override onlyOwner {\\r\\n        require(MAX_PROTOCOL_FEE >= _protocolFee, \\\"GhafMarketPlace: invalid fee\\\");\\r\\n        protocolFee = _protocolFee;\\r\\n    }\\r\\n\\r\\n\\r\\n    /// @notice Pause the contract so only the functions can be called which are whenPaused\\r\\n    /// @dev Only owner can pause \\r\\n    function pause() external override onlyOwner {\\r\\n        _pause();\\r\\n    }\\r\\n\\r\\n    /// @notice Unpause the contract so only the functions can be called which are whenNotPaused\\r\\n    /// @dev Only owner can pause\\r\\n    function unpause() external override onlyOwner {\\r\\n        _unpause();\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual override onlyOwner {}\\r\\n    \\r\\n    /// @notice                     Lists Nft of a user\\r\\n    /// @dev                        Call approve function of Nft Contract before the call this func\\r\\n    /// @dev                        Just owner of nft can call this func\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    /// @param _buyType             Type of Buy nft (e.g. BUYNOW or AUCTION )\\r\\n    function listNft(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        GhafMarketPlaceLib.BuyTypes _buyType\\r\\n\\t) external  whenNotPaused  override returns (bool) {\\r\\n\\r\\n\\r\\n        require(\\r\\n                IERC721(_nftContractAddress).ownerOf(_tokenId\\r\\n                ) == _msgSender(),\\r\\n                \\\"Caller is not the owner\\\"\\r\\n            );\\r\\n        IERC721(_nftContractAddress).transferFrom(\\r\\n            _msgSender(),\\r\\n            address(this),\\r\\n            _tokenId\\r\\n        );\\r\\n        \\r\\n        GhafMarketPlaceLib.listNftHelper(\\r\\n            _nftContractAddress,\\r\\n            _tokenId,\\r\\n            _buyType,\\r\\n            nfts,\\r\\n            _msgSender()\\r\\n        );\\r\\n        \\r\\n        emit NftListed(\\r\\n            _nftContractAddress, \\r\\n            _tokenId, \\r\\n            _msgSender(), \\r\\n            _buyType\\r\\n        );\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @notice                     Delists an Nft\\r\\n    /// @dev                        Revokes all the existing bids\\r\\n    ///                             Reverts if the seller has accepted a bid or sold it\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    function delistNft(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId\\r\\n    ) external override returns (bool) {\\r\\n\\r\\n\\r\\n        address _seller = nfts[_nftContractAddress][_tokenId].seller;\\r\\n\\r\\n\\r\\n        GhafMarketPlaceLib.delistNftHelper(\\r\\n            _nftContractAddress,\\r\\n            _tokenId,\\r\\n            nfts,\\r\\n            nfts[_nftContractAddress][_tokenId].seller\\r\\n        );\\r\\n\\r\\n         IERC721(_nftContractAddress).transferFrom(\\r\\n            address(this),\\r\\n            _seller,\\r\\n            _tokenId\\r\\n        );\\r\\n\\r\\n        // Revokes all bids\\r\\n        for (uint i = 0; i < bids[_nftContractAddress][_tokenId].length; i++) {\\r\\n            if (bids[_nftContractAddress][_tokenId][i].buyerAddress != address(0)) { \\r\\n                // ^ If the bid is not empty\\r\\n                emit BidRevoked(\\r\\n                    _nftContractAddress, \\r\\n                    _tokenId, \\r\\n                    nfts[_nftContractAddress][_tokenId].seller,\\r\\n                    bids[_nftContractAddress][_tokenId][i].buyerAddress,\\r\\n                    i\\r\\n                );\\r\\n                _removeBid(\\r\\n                    _nftContractAddress, \\r\\n                    _tokenId, \\r\\n                    bids[_nftContractAddress][_tokenId][i].buyerAddress, \\r\\n                    i\\r\\n                );\\r\\n            }    \\r\\n        }\\r\\n\\r\\n\\r\\n\\r\\n        emit NftDelisted(\\r\\n            _nftContractAddress, \\r\\n            _tokenId, \\r\\n            nfts[_nftContractAddress][_tokenId].seller\\r\\n        );\\r\\n        nfts[_nftContractAddress][_tokenId].seller = address(0);\\r\\n        nfts[_nftContractAddress][_tokenId].isSold = false;\\r\\n        nfts[_nftContractAddress][_tokenId].hasAccepted = false;\\r\\n        nfts[_nftContractAddress][_tokenId].isListed = false;\\r\\n        nfts[_nftContractAddress][_tokenId].buyType = GhafMarketPlaceLib.BuyTypes.BUYNOW;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @notice                     Puts bid for buyying an Nft\\r\\n    /// @dev                        User sends the bid amount along with the request\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    /// @param _amount              Amount of buyer's bid\\r\\n    /// @param _paymentToken        Address of token that buyer uses for payment\\r\\n    function putBid(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        uint _amount,\\r\\n        address _paymentToken\\r\\n    ) external payable whenNotPaused nonZeroAddress(_paymentToken) override returns (uint _bidIdx) {\\r\\n        \\r\\n        GhafMarketPlaceLib.putBidHelper(_nftContractAddress, _tokenId, nfts);\\r\\n\\r\\n        // Stores bid\\r\\n        GhafMarketPlaceLib.Bid memory _bid;\\r\\n        _bid.buyerAddress = _msgSender();\\r\\n        if (_paymentToken == NATIVE_TOKEN) {\\r\\n            require(msg.value == _amount, \\\"GhafMarketPlace: wrong value\\\");\\r\\n        } else {\\r\\n            IERC20(_paymentToken).transferFrom(_msgSender(), address(this), _amount);\\r\\n        }\\r\\n        _bid.bidAmount = _amount;\\r\\n        _bid.paymentToken = _paymentToken;\\r\\n        bids[_nftContractAddress][_tokenId].push(_bid);\\r\\n        _bidIdx = bids[_nftContractAddress][_tokenId].length - 1;\\r\\n\\r\\n        emit NewBid(\\r\\n            _nftContractAddress, \\r\\n            _tokenId,\\r\\n            nfts[_nftContractAddress][_tokenId].seller, \\r\\n            _msgSender(),\\r\\n            _amount,\\r\\n            _paymentToken,\\r\\n            _bidIdx\\r\\n        );\\r\\n\\r\\n    }\\r\\n\\r\\n    /// @notice                     Increases the existing bid amount\\r\\n    /// @dev                        Reverts if the new amount is lower than the previous amount\\r\\n    ///                             User sends the bid difference\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    /// @param _bidIdx              of the buyer\\r\\n    /// @param _newAmount           of bid\\r\\n    function increaseBid(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        uint _bidIdx,\\r\\n        uint _newAmount\\r\\n    ) external payable whenNotPaused override returns (bool) {\\r\\n\\r\\n        GhafMarketPlaceLib.increaseBidHelper(\\r\\n            _nftContractAddress,\\r\\n            _tokenId,\\r\\n            _bidIdx,\\r\\n            _newAmount,\\r\\n            nfts,\\r\\n            bids,\\r\\n            _msgSender()\\r\\n        );\\r\\n\\r\\n        uint bidDifference = _newAmount - bids[_nftContractAddress][_tokenId][_bidIdx].bidAmount;\\r\\n        address paymentToken = bids[_nftContractAddress][_tokenId][_bidIdx].paymentToken;\\r\\n\\r\\n        if (paymentToken == NATIVE_TOKEN) {\\r\\n            require(msg.value == bidDifference, \\\"GhafMarketPlace: wrong value\\\");\\r\\n        } else {\\r\\n            IERC20(paymentToken).transferFrom(_msgSender(), address(this), bidDifference);\\r\\n        }\\r\\n        \\r\\n        bids[_nftContractAddress][_tokenId][_bidIdx].bidAmount = _newAmount;\\r\\n\\r\\n        emit BidUpdated(\\r\\n            _nftContractAddress, \\r\\n            _tokenId, \\r\\n            nfts[_nftContractAddress][_tokenId].seller,\\r\\n            _msgSender(),\\r\\n            _bidIdx,\\r\\n            _newAmount\\r\\n        );\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @notice                     Removes buyer's bid\\r\\n    /// @dev                        Only bid owner can call this function\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    /// @param _bidIdx              Index of the bid in bids list\\r\\n    function cancelBid(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        uint _bidIdx\\r\\n    ) external override returns (bool) {\\r\\n        require(\\r\\n            bids[_nftContractAddress][_tokenId][_bidIdx].buyerAddress == _msgSender(),\\r\\n            \\\"GhafMarketPlace: not owner\\\"\\r\\n        );\\r\\n\\r\\n        // Handles the case where the seller accepted a bid \\r\\n        if (bids[_nftContractAddress][_tokenId][_bidIdx].isAccepted) {\\r\\n            require(!nfts[_nftContractAddress][_tokenId].isSold, \\\"GhafMarketPlace: nft sold\\\");\\r\\n            // Changes the status of the Nft (so seller can accept a new bid)\\r\\n            nfts[_nftContractAddress][_tokenId].hasAccepted = false;\\r\\n        }\\r\\n\\r\\n        emit BidCanceled(\\r\\n            _nftContractAddress, \\r\\n            _tokenId, \\r\\n            nfts[_nftContractAddress][_tokenId].seller,\\r\\n            bids[_nftContractAddress][_tokenId][_bidIdx].buyerAddress,\\r\\n            _bidIdx\\r\\n        );\\r\\n        _removeBid(_nftContractAddress, _tokenId,_msgSender(), _bidIdx);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @notice                     Accepts one of the existing bids & Sends funds to seller & Send Nft to Buyer\\r\\n    /// @dev                        Will be reverted if the seller has already accepted a bid\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    /// @param _bidIdx              Index of the bid in bids list\\r\\n    function acceptBid(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        uint _bidIdx\\r\\n    ) external whenNotPaused override returns (bool) {\\r\\n        require(nfts[_nftContractAddress][_tokenId].seller == _msgSender(), \\\"GhafMarketPlace: not owner\\\");\\r\\n        require(nfts[_nftContractAddress][_tokenId].buyType == GhafMarketPlaceLib.BuyTypes.AUCTION, \\\"GhafMarketPlace: buyType is not AUCTION\\\");\\r\\n        require(!nfts[_nftContractAddress][_tokenId].hasAccepted, \\\"GhafMarketPlace: already accepted\\\");\\r\\n        require(bids[_nftContractAddress][_tokenId].length > _bidIdx, \\\"GhafMarketPlace: invalid idx\\\");  \\r\\n\\r\\n\\r\\n        nfts[_nftContractAddress][_tokenId].hasAccepted = true;\\r\\n        bids[_nftContractAddress][_tokenId][_bidIdx].isAccepted = true;\\r\\n\\r\\n\\r\\n        emit BidAccepted(\\r\\n            _nftContractAddress, \\r\\n            _tokenId,\\r\\n            nfts[_nftContractAddress][_tokenId].seller,\\r\\n            bids[_nftContractAddress][_tokenId][_bidIdx].buyerAddress,\\r\\n            _bidIdx\\r\\n        );\\r\\n        _buy(_nftContractAddress,_tokenId,bids[_nftContractAddress][_tokenId][_bidIdx].buyerAddress,bids[_nftContractAddress][_tokenId][_bidIdx].bidAmount,bids[_nftContractAddress][_tokenId][_bidIdx].paymentToken,GhafMarketPlaceLib.BuyTypes.AUCTION);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @notice                     Sends funds to seller & Send Nft to Buyer\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    /// @param _buyerAddress     Address of buyer\\r\\n    /// @param _amount              Amount of buyer's pay\\r\\n    /// @param _paymentToken        Address of token that buyer uses for payment\\r\\n    function _buy(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        address _buyerAddress,\\r\\n        uint _amount,\\r\\n        address _paymentToken,\\r\\n        GhafMarketPlaceLib.BuyTypes  _buyType\\r\\n    ) internal  returns (bool) {\\r\\n        // Checks that Nft hasn't been sold before\\r\\n        require(!nfts[_nftContractAddress][_tokenId].isSold, \\\"GhafMarketPlace: sold nft\\\");\\r\\n        \\r\\n        IERC721(_nftContractAddress).transferFrom(\\r\\n            address(this),\\r\\n            _buyerAddress,\\r\\n            _tokenId\\r\\n        );\\r\\n\\r\\n        \\r\\n\\r\\n        nfts[_nftContractAddress][_tokenId].isSold = true;\\r\\n        nfts[_nftContractAddress][_tokenId].isListed = false;\\r\\n        nfts[_nftContractAddress][_tokenId].hasAccepted = false;\\r\\n\\r\\n        uint fee = _sendTokens(_nftContractAddress,_tokenId, _amount,_paymentToken);\\r\\n\\r\\n         emit NftSold(\\r\\n            _nftContractAddress, \\r\\n            _tokenId,\\r\\n            nfts[_nftContractAddress][_tokenId].seller,\\r\\n            _buyerAddress,\\r\\n            fee,\\r\\n            _amount,\\r\\n            _paymentToken,\\r\\n            _buyType\\r\\n            );\\r\\n        \\r\\n        \\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @notice                     Puts amount for buyying an Nft & Sends funds to seller & Send Nft to Buyer\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    /// @param _amount              Amount of buyer's pay\\r\\n    /// @param _paymentToken        Address of token that buyer uses for payment\\r\\n    function buyNft(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        uint _amount,\\r\\n        address _paymentToken\\r\\n    ) external payable override returns (bool){\\r\\n      require(nfts[_nftContractAddress][_tokenId].buyType == GhafMarketPlaceLib.BuyTypes.BUYNOW, \\\"GhafMarketPlace: buyType is not BUYNOW\\\");\\r\\n\\r\\n       if (_paymentToken == NATIVE_TOKEN) {\\r\\n            require(msg.value == _amount, \\\"GhafMarketPlace: wrong value\\\");\\r\\n        } else {\\r\\n            IERC20(_paymentToken).transferFrom(_msgSender(), address(this), _amount);\\r\\n        }\\r\\n        _buy(_nftContractAddress,_tokenId,_msgSender(),_amount,_paymentToken,GhafMarketPlaceLib.BuyTypes.BUYNOW);\\r\\n    }\\r\\n\\r\\n    /// @notice                     Removes a bid\\r\\n    /// @param _nftContractAddress  Address of NFT token contract\\r\\n    /// @param _tokenId             A number that identify the NFT within the NFT token contract\\r\\n    /// @param _buyer               Address of buyer\\r\\n    /// @param _bidIdx              Index of the bid in bids list\\r\\n    function _removeBid(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        address _buyer, \\r\\n        uint _bidIdx\\r\\n    ) private {\\r\\n        if (bids[_nftContractAddress][_tokenId][_bidIdx].paymentToken == NATIVE_TOKEN) {\\r\\n            // Sends ETH to buyer\\r\\n            Address.sendValue(payable(_buyer), bids[_nftContractAddress][_tokenId][_bidIdx].bidAmount);\\r\\n        } else {\\r\\n            IERC20(bids[_nftContractAddress][_tokenId][_bidIdx].paymentToken).transfer(\\r\\n                _buyer,\\r\\n                bids[_nftContractAddress][_tokenId][_bidIdx].bidAmount\\r\\n            );\\r\\n        }\\r\\n\\r\\n        // Deletes the bid\\r\\n        delete bids[_nftContractAddress][_tokenId][_bidIdx];\\r\\n    }\\r\\n\\r\\n    /// @notice Sends tokens to seller and treasury\\r\\n    function _sendTokens(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        uint _payAmount,\\r\\n        address _paymentToken\\r\\n    ) internal returns (uint _fee) {\\r\\n\\r\\n        address paymentToken = _paymentToken;\\r\\n        uint payAmount = _payAmount;\\r\\n        _fee = protocolFee * payAmount / MAX_PROTOCOL_FEE;\\r\\n        \\r\\n        if (paymentToken == NATIVE_TOKEN) {\\r\\n            Address.sendValue(payable(nfts[_nftContractAddress][_tokenId].seller), payAmount - _fee);\\r\\n            if (_fee > 0) {\\r\\n                Address.sendValue(payable(treasury), _fee);\\r\\n            }\\r\\n        } else { \\r\\n            IERC20(paymentToken).transfer(\\r\\n                nfts[_nftContractAddress][_tokenId].seller,\\r\\n                payAmount - _fee\\r\\n            );\\r\\n            if (_fee > 0) {\\r\\n                IERC20(paymentToken).transfer(\\r\\n                    treasury,\\r\\n                    _fee\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdd6611290d81ed499495437fc1f48bd51a6f21c23623315d43a678ebb0d75f03\",\"license\":\"MIT\"},\"contracts/GhafMarketplace/GhafMarketPlaceStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.8.4;\\r\\n\\r\\nimport \\\"./interfaces/IGhafMarketPlaceStorage.sol\\\";\\r\\n\\r\\ncontract GhafMarketPlaceStorage is IGhafMarketPlaceStorage {\\r\\n\\r\\n    address constant public NATIVE_TOKEN = address(1);\\r\\n    uint constant public MAX_PROTOCOL_FEE = 100; // 100 = %100\\r\\n    \\r\\n    address public override treasury;\\r\\n    uint public override protocolFee;\\r\\n    \\r\\n    mapping(address =>  mapping(uint => GhafMarketPlaceLib.Nft)) public nfts;\\r\\n    // ^ Mapping from [_nftContractAddress][_tokenId] to a listed Nft\\r\\n    mapping(address => mapping(uint => GhafMarketPlaceLib.Bid[])) public bids; \\r\\n    // ^ Mapping from [_nftContractAddress][_tokenId] to bids (note: it wasn't possible to define Bid[] in Nft)\\r\\n\\r\\n}\",\"keccak256\":\"0xaceaf9c462a9657e4bea42f09029201ada45b03212253abf41afdfefae68214a\",\"license\":\"MIT\"},\"contracts/GhafMarketplace/interfaces/IGhafMarketPlaceLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.8.4;\\r\\n\\r\\nimport \\\"./IGhafMarketPlaceStorage.sol\\\";\\r\\nimport \\\"../GhafMarketPlaceLib.sol\\\";\\r\\n\\r\\n\\r\\ninterface IGhafMarketPlaceLogic is IGhafMarketPlaceStorage {\\r\\n\\r\\n  \\t// Events\\r\\n\\r\\n    event NftListed(\\r\\n        address nftContractAddress, \\r\\n        uint256 tokenId, \\r\\n        address seller,\\r\\n        GhafMarketPlaceLib.BuyTypes buyType\\r\\n    );\\r\\n\\r\\n    event NftDelisted(\\r\\n        address nftContractAddress, \\r\\n        uint256 tokenId, \\r\\n        address seller\\r\\n    );\\r\\n\\r\\n    event NewBid(\\r\\n        address nftContractAddress, \\r\\n        uint256 tokenId, \\r\\n        address seller, \\r\\n        address buyer,\\r\\n        uint bidAmount,\\r\\n        address paymentToken,\\r\\n        uint bidIdx\\r\\n    );\\r\\n\\r\\n    event BidUpdated(\\r\\n        address nftContractAddress, \\r\\n        uint256 tokenId, \\r\\n        address seller, \\r\\n        address buyer, \\r\\n        uint bidIdx,\\r\\n        uint newAmount\\r\\n    );\\r\\n\\r\\n    event BidAccepted(\\r\\n        address nftContractAddress, \\r\\n        uint256 tokenId, \\r\\n        address seller, \\r\\n        address buyer,\\r\\n        uint bidIdx\\r\\n    );\\r\\n\\r\\n    event BidCanceled(\\r\\n        address nftContractAddress, \\r\\n        uint256 tokenId, \\r\\n        address seller, \\r\\n        address buyer,\\r\\n        uint bidIdx\\r\\n    );\\r\\n\\r\\n    event BidRevoked(\\r\\n        address nftContractAddress, \\r\\n        uint256 tokenId, \\r\\n        address seller, \\r\\n        address buyer, \\r\\n        uint bidIdx\\r\\n    );\\r\\n\\r\\n    event NftSold(\\r\\n        address nftContractAddress, \\r\\n        uint256 tokenId,  \\r\\n        address seller, \\r\\n        address buyer,\\r\\n        uint fee,\\r\\n        uint payAmount,\\r\\n        address paymentToken,\\r\\n        GhafMarketPlaceLib.BuyTypes buyType\\r\\n    );\\r\\n\\r\\n\\t// State-changing functions\\r\\n\\r\\n\\r\\n\\r\\n    function setProtocolFee(uint _protocolFee) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n\\r\\n    function pause() external;\\r\\n\\r\\n    function unpause() external;\\r\\n\\r\\n\\tfunction listNft(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        GhafMarketPlaceLib.BuyTypes _buyType\\r\\n\\t) external returns (bool);\\r\\n\\r\\n    function delistNft(address _nftContractAddress,uint256 _tokenId) external returns (bool);\\r\\n\\r\\n    function putBid(\\r\\n        address _nftContractAddress, \\r\\n        uint256 _tokenId,\\r\\n        uint _amount,\\r\\n        address _paymentToken\\r\\n    ) external payable returns (uint);\\r\\n\\r\\n    function increaseBid(\\r\\n        address _nftContractAddress, \\r\\n        uint256 _tokenId,\\r\\n        uint _bidIdx,\\r\\n        uint _newAmount\\r\\n    ) external payable returns (bool);\\r\\n\\r\\n    function cancelBid(\\r\\n        address _nftContractAddress, \\r\\n        uint256 _tokenId,\\r\\n        uint _bidIdx\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function acceptBid(\\r\\n        address _nftContractAddress, \\r\\n        uint256 _tokenId,\\r\\n        uint _bidIdx\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function buyNft(\\r\\n        address _nftContractAddress, \\r\\n        uint256 _tokenId,\\r\\n        uint _amount,\\r\\n        address _paymentToken\\r\\n    ) external payable returns (bool);\\r\\n    \\r\\n\\r\\n}\",\"keccak256\":\"0x46bda1fa04b13bbff3f8ef383e21c49d4cc086eeb59d472af633c969e30337c3\",\"license\":\"MIT\"},\"contracts/GhafMarketplace/interfaces/IGhafMarketPlaceStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.8.4;\\r\\n\\r\\nimport \\\"../GhafMarketPlaceLib.sol\\\";\\r\\n\\r\\ninterface IGhafMarketPlaceStorage {\\r\\n\\r\\n\\t// Read-only functions\\r\\n\\r\\n    function protocolFee() external view returns (uint);\\r\\n\\r\\n    function treasury() external view returns (address);\\r\\n\\r\\n}\",\"keccak256\":\"0x9f2526dff1701acd6fd43c2d4cce2af4593d73eeb259276bdf70b7b58f2f0c0f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506129ac806100206000396000f3fe6080604052600436106101395760003560e01c80637c1c9978116100ab578063b0e21e8a1161006f578063b0e21e8a146103b4578063b8ca3b83146103ca578063da35a26f146103df578063e13a40f0146103ff578063f0f442601461041f578063f2fde38b1461043f57610140565b80637c1c99781461032e5780637c9788861461034e5780638456cb591461036e5780638ae45505146103835780638da5cb5b1461039657610140565b806346d02934116100fd57806346d029341461025b578063561c9276146102ae5780635c975abb146102c157806361d027b3146102d9578063715018a6146102f9578063787dce3d1461030e57610140565b806328f2a0c21461014557806331f7d9641461016b5780633290463b146101985780633f4ba83a146101c857806343af356b146101df57610140565b3661014057005b600080fd5b6101586101533660046125f4565b61045f565b6040519081526020015b60405180910390f35b34801561017757600080fd5b50610180600181565b6040516001600160a01b039091168152602001610162565b3480156101a457600080fd5b506101b86101b33660046125c0565b61075c565b6040519015158152602001610162565b3480156101d457600080fd5b506101dd6109dc565b005b3480156101eb57600080fd5b5061024a6101fa366004612551565b60026020908152600092835260408084209091529082529020546001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b90041685565b604051610162959493929190612724565b34801561026757600080fd5b5061027b6102763660046125c0565b6109ee565b604080516001600160a01b0395861681526020810194909452911515918301919091529091166060820152608001610162565b6101b86102bc3660046125f4565b610a53565b3480156102cd57600080fd5b5060695460ff166101b8565b3480156102e557600080fd5b50600054610180906001600160a01b031681565b34801561030557600080fd5b506101dd610bd1565b34801561031a57600080fd5b506101dd610329366004612697565b610bd9565b34801561033a57600080fd5b506101b861034936600461257c565b610c37565b34801561035a57600080fd5b506101b8610369366004612551565b610e39565b34801561037a57600080fd5b506101dd61119e565b6101b861039136600461263d565b6111ae565b3480156103a257600080fd5b506037546001600160a01b0316610180565b3480156103c057600080fd5b5061015860015481565b3480156103d657600080fd5b50610158606481565b3480156103eb57600080fd5b506101dd6103fa3660046126af565b6114ae565b34801561040b57600080fd5b506101b861041a3660046125c0565b6115db565b34801561042b57600080fd5b506101dd61043a366004612512565b611a5e565b34801561044b57600080fd5b506101dd61045a366004612512565b611ae0565b6000610469611b59565b816001600160a01b0381166104c55760405162461bcd60e51b815260206004820181905260248201527f476861664d61726b6574506c6163653a2061646472657373206973207a65726f60448201526064015b60405180910390fd5b604051632e6f387760e01b81526001600160a01b0387166004820152602481018690526002604482015273e7F7e517Ef826A171889B1f847E741D60C1d00C490632e6f38779060640160006040518083038186803b15801561052657600080fd5b505af415801561053a573d6000803e3d6000fd5b505060408051608081018252600080825260208201819052918101829052606081019190915291506105699050565b33815260016001600160a01b03851614156105a25784341461059d5760405162461bcd60e51b81526004016104bc90612858565b610626565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906105d290339030908a90600401612700565b602060405180830381600087803b1580156105ec57600080fd5b505af1158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190612677565b505b60208181018681526001600160a01b03868116606085019081528a82166000908152600380865260408083208d845287528083208054600180820183558286529885208a519190940290930180549387166001600160a01b031990941693909317835595518288015587015160029091018054935190941661010002610100600160a81b031991151560ff19909416939093171691909117909155889052546106cf9190612919565b6001600160a01b0388811660008181526002602090815260408083208c84528252918290205482519384529083018b90528316828201523360608301526080820189905291871660a082015260c0810183905290519194507f099bd8f91c5f4fea587a36ba2437cdfdd9cf9254421e9e26682b48f95afdae12919081900360e00190a15050949350505050565b6001600160a01b038316600090815260036020908152604080832085845290915281208054339190849081106107a257634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b0316146108095760405162461bcd60e51b815260206004820152601a60248201527f476861664d61726b6574506c6163653a206e6f74206f776e657200000000000060448201526064016104bc565b6001600160a01b0384166000908152600360209081526040808320868452909152902080548390811061084c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206002600390920201015460ff1615610912576001600160a01b0384166000908152600260209081526040808320868452909152902054600160a01b900460ff16156108e35760405162461bcd60e51b815260206004820152601960248201527f476861664d61726b6574506c6163653a206e667420736f6c640000000000000060448201526064016104bc565b6001600160a01b03841660009081526002602090815260408083208684529091529020805460ff60a81b191690555b6001600160a01b03808516600081815260026020908152604080832088845282528083205493835260038252808320888452909152902080547f2206717382ed98a50d41c9d10a48cb2e4d7929ff50504925b9328b99fdf1122893889388939116918790811061099257634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546040516109be949392916001600160a01b0316908890612759565b60405180910390a16109d284843385611b9f565b5060019392505050565b6109e4611e2c565b6109ec611e86565b565b60036020528260005260406000206020528160005260406000208181548110610a1657600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03918216955091935060ff821692506101009091041684565b6000806001600160a01b0386166000908152600260209081526040808320888452909152902054600160b81b900460ff166001811115610aa357634e487b7160e01b600052602160045260246000fd5b14610aff5760405162461bcd60e51b815260206004820152602660248201527f476861664d61726b6574506c6163653a2062757954797065206973206e6f74206044820152654255594e4f5760d01b60648201526084016104bc565b6001600160a01b03821660011415610b3557823414610b305760405162461bcd60e51b81526004016104bc90612858565b610bb9565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd90610b6590339030908890600401612700565b602060405180830381600087803b158015610b7f57600080fd5b505af1158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb79190612677565b505b610bc885853386866000611ed8565b50949350505050565b6109ec611e2c565b610be1611e2c565b8060641015610c325760405162461bcd60e51b815260206004820152601c60248201527f476861664d61726b6574506c6163653a20696e76616c6964206665650000000060448201526064016104bc565b600155565b6000610c41611b59565b336040516331a9108f60e11b8152600481018590526001600160a01b0391821691861690636352211e9060240160206040518083038186803b158015610c8657600080fd5b505afa158015610c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbe9190612535565b6001600160a01b031614610d145760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016104bc565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610d4490339030908890600401612700565b600060405180830381600087803b158015610d5e57600080fd5b505af1158015610d72573d6000803e3d6000fd5b5050505073e7F7e517Ef826A171889B1f847E741D60C1d00C4639dc05dc08585856002610d9c3390565b6040518663ffffffff1660e01b8152600401610dbc959493929190612819565b60006040518083038186803b158015610dd457600080fd5b505af4158015610de8573d6000803e3d6000fd5b505050507f743f118d87813972873571f72d19e16c1d25c1e7107cd884bb72b6784ddb1eb58484610e163390565b85604051610e2794939291906127e4565b60405180910390a15060019392505050565b6001600160a01b03828116600081815260026020818152604080842087855290915280832054905163676c480f60e01b81526004810194909452602484018690526044840191909152909216606482018190529073e7F7e517Ef826A171889B1f847E741D60C1d00C49063676c480f9060840160006040518083038186803b158015610ec457600080fd5b505af4158015610ed8573d6000803e3d6000fd5b50506040516323b872dd60e01b81526001600160a01b03871692506323b872dd9150610f0c90309085908890600401612700565b600060405180830381600087803b158015610f2657600080fd5b505af1158015610f3a573d6000803e3d6000fd5b5050505060005b6001600160a01b0385166000908152600360209081526040808320878452909152902054811015611100576001600160a01b03851660009081526003602090815260408083208784529091528120805483908110610faf57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b0316146110ee576001600160a01b03808616600081815260026020908152604080832089845282528083205493835260038252808320898452909152902080547f2d90ac1c059eb788f6122a35a6641a9423c6ab4a03f506fd7204f8d0d8750c8093899389939116918690811061104e57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102015460405161107a949392916001600160a01b0316908790612759565b60405180910390a16001600160a01b0385166000908152600360209081526040808320878452909152902080546110ee918791879190859081106110ce57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b031684611b9f565b806110f881612930565b915050610f41565b506001600160a01b0384811660008181526002602090815260408083208884528252918290205482519384529083018790529092168183015290517fe5eb66cd46c56d8f2e3f3671c821b67775962716c61f5ede46ced2c047c8900f9181900360600190a150506001600160a01b039190911660009081526002602090815260408083209383529290522080546001600160c01b0319169055600190565b6111a6611e2c565b6109ec61207f565b60006111b8611b59565b60408051630e96d5dd60e01b81526001600160a01b038716600482015260248101869052604481018590526064810184905260026084820152600360a48201523360c4820152905173e7F7e517Ef826A171889B1f847E741D60C1d00C491630e96d5dd9160e4808301926000929190829003018186803b15801561123b57600080fd5b505af415801561124f573d6000803e3d6000fd5b505050506001600160a01b0385166000908152600360209081526040808320878452909152812080548590811061129657634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160010154836112b39190612919565b6001600160a01b0387166000908152600360209081526040808320898452909152812080549293509091869081106112fb57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102016002015461010090046001600160a01b03169050600181141561134c578134146113475760405162461bcd60e51b81526004016104bc90612858565b6113d0565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd9061137c90339030908790600401612700565b602060405180830381600087803b15801561139657600080fd5b505af11580156113aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ce9190612677565b505b6001600160a01b0387166000908152600360209081526040808320898452909152902080548591908790811061141657634e487b7160e01b600052603260045260246000fd5b60009182526020808320600392909202909101600101929092556001600160a01b038981168083526002845260408084208b85528552928390205483519182529381018a90529216828201523360608301526080820187905260a08201869052517fe74ba9d02c7e3172a8c653bf2bcfaff5cb81fbf933284d0bf440b8c64940aea99181900360c00190a15060019695505050505050565b600454610100900460ff16158080156114ce5750600454600160ff909116105b806114e85750303b1580156114e8575060045460ff166001145b61154b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104bc565b6004805460ff19166001179055801561156e576004805461ff0019166101001790555b6115766120bc565b61157e6120eb565b61158783610bd9565b61159082611a5e565b80156115d6576004805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60006115e5611b59565b6001600160a01b0384811660009081526002602090815260408083208784529091529020541633146116595760405162461bcd60e51b815260206004820152601a60248201527f476861664d61726b6574506c6163653a206e6f74206f776e657200000000000060448201526064016104bc565b60016001600160a01b0385166000908152600260209081526040808320878452909152902054600160b81b900460ff1660018111156116a857634e487b7160e01b600052602160045260246000fd5b146117055760405162461bcd60e51b815260206004820152602760248201527f476861664d61726b6574506c6163653a2062757954797065206973206e6f742060448201526620aaa1aa24a7a760c91b60648201526084016104bc565b6001600160a01b0384166000908152600260209081526040808320868452909152902054600160a81b900460ff161561178a5760405162461bcd60e51b815260206004820152602160248201527f476861664d61726b6574506c6163653a20616c726561647920616363657074656044820152601960fa1b60648201526084016104bc565b6001600160a01b038416600090815260036020908152604080832086845290915290205482106117fc5760405162461bcd60e51b815260206004820152601c60248201527f476861664d61726b6574506c6163653a20696e76616c6964206964780000000060448201526064016104bc565b6001600160a01b03841660008181526002602090815260408083208784528252808320805460ff60a81b1916600160a81b179055928252600381528282208683529052208054600191908490811061186457634e487b7160e01b600052603260045260246000fd5b600091825260208083206003928302016002908101805460ff1916951515959095179094556001600160a01b038881168085529482526040808520898652835280852054958552928252828420888552909152912080547f0d496e5bb4fa3f063ed8f5f3553ecdcc05d9c45885f4de61327caffd024407fd93889388939116918790811061190257634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102015460405161192e949392916001600160a01b0316908890612759565b60405180910390a16001600160a01b038416600090815260036020908152604080832086845290915290208054611a539186918691908690811061198257634e487b7160e01b600052603260045260246000fd5b60009182526020808320600392830201546001600160a01b038b8116855292825260408085208b865290925292208054919092169190879081106119d657634e487b7160e01b600052603260045260246000fd5b60009182526020808320600392830201600101546001600160a01b038c16845291815260408084208b8552909152909120805488908110611a2757634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160019054906101000a90046001600160a01b03166001611ed8565b506001949350505050565b806001600160a01b038116611ab55760405162461bcd60e51b815260206004820181905260248201527f476861664d61726b6574506c6163653a2061646472657373206973207a65726f60448201526064016104bc565b611abd611e2c565b50600080546001600160a01b0319166001600160a01b0392909216919091179055565b611ae8611e2c565b6001600160a01b038116611b4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bc565b611b568161211a565b50565b60695460ff16156109ec5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104bc565b6001600160a01b0384166000908152600360209081526040808320868452909152902080546001919083908110611be657634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102016002015461010090046001600160a01b03161415611c73576001600160a01b038416600090815260036020908152604080832086845290915290208054611c6e91849184908110611c5757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015461216c565b611dad565b6001600160a01b03841660009081526003602090815260408083208684529091529020805482908110611cb657634e487b7160e01b600052603260045260246000fd5b60009182526020808320600392830201600201546001600160a01b0388811685529282526040808520888652909252922080546101009093049091169163a9059cbb91859185908110611d1957634e487b7160e01b600052603260045260246000fd5b60009182526020909120600160039092020101546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015611d7357600080fd5b505af1158015611d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dab9190612677565b505b6001600160a01b03841660009081526003602090815260408083208684529091529020805482908110611df057634e487b7160e01b600052603260045260246000fd5b60009182526020822060039091020180546001600160a01b0319168155600181019190915560020180546001600160a81b031916905550505050565b6037546001600160a01b031633146109ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bc565b611e8e612285565b6069805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0386166000908152600260209081526040808320888452909152812054600160a01b900460ff1615611f535760405162461bcd60e51b815260206004820152601960248201527f476861664d61726b6574506c6163653a20736f6c64206e66740000000000000060448201526064016104bc565b6040516323b872dd60e01b81526001600160a01b038816906323b872dd90611f8390309089908b90600401612700565b600060405180830381600087803b158015611f9d57600080fd5b505af1158015611fb1573d6000803e3d6000fd5b505050506001600160a01b038716600090815260026020908152604080832089845290915281208054600160a01b60ff60a01b199091161761ffff60a81b19169055611fff888887876122ce565b6001600160a01b03808a1660009081526002602090815260408083208c8452909152908190205490519293507fb994b13bf5ee11fd15d7b0a9ef63605e4d6d7159717150edb6bab98bef14d0b092612067928c928c929116908b9087908c908c908c9061278c565b60405180910390a160019150505b9695505050505050565b612087611b59565b6069805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ebb3390565b600454610100900460ff166120e35760405162461bcd60e51b81526004016104bc9061288f565b6109ec6124af565b600454610100900460ff166121125760405162461bcd60e51b81526004016104bc9061288f565b6109ec6124df565b603780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b804710156121bc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016104bc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612209576040519150601f19603f3d011682016040523d82523d6000602084013e61220e565b606091505b50509050806115d65760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104bc565b60695460ff166109ec5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104bc565b600154600090829084906064906122e69083906128fa565b6122f091906128da565b92506001600160a01b0382166001141561235e576001600160a01b0380881660009081526002602090815260408083208a845290915290205461233d91166123388584612919565b61216c565b821561235957600054612359906001600160a01b03168461216c565b6124a5565b6001600160a01b0387811660009081526002602090815260408083208a84529091529020548184169163a9059cbb91166123988685612919565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156123de57600080fd5b505af11580156123f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124169190612677565b5082156124a55760005460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018590529083169063a9059cbb90604401602060405180830381600087803b15801561246b57600080fd5b505af115801561247f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a39190612677565b505b5050949350505050565b600454610100900460ff166124d65760405162461bcd60e51b81526004016104bc9061288f565b6109ec3361211a565b600454610100900460ff166125065760405162461bcd60e51b81526004016104bc9061288f565b6069805460ff19169055565b600060208284031215612523578081fd5b813561252e81612961565b9392505050565b600060208284031215612546578081fd5b815161252e81612961565b60008060408385031215612563578081fd5b823561256e81612961565b946020939093013593505050565b600080600060608486031215612590578081fd5b833561259b81612961565b9250602084013591506040840135600281106125b5578182fd5b809150509250925092565b6000806000606084860312156125d4578283fd5b83356125df81612961565b95602085013595506040909401359392505050565b60008060008060808587031215612609578081fd5b843561261481612961565b93506020850135925060408501359150606085013561263281612961565b939692955090935050565b60008060008060808587031215612652578384fd5b843561265d81612961565b966020860135965060408601359560600135945092505050565b600060208284031215612688578081fd5b8151801515811461252e578182fd5b6000602082840312156126a8578081fd5b5035919050565b600080604083850312156126c1578182fd5b8235915060208301356126d381612961565b809150509250929050565b600281106126fc57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038616815284151560208201528315156040820152821515606082015260a0810161207560808301846126de565b6001600160a01b039586168152602081019490945291841660408401529092166060820152608081019190915260a00190565b6001600160a01b03898116825260208201899052878116604083015286811660608301526080820186905260a08201859052831660c082015261010081016127d760e08301846126de565b9998505050505050505050565b6001600160a01b03858116825260208201859052831660408201526080810161281060608301846126de565b95945050505050565b6001600160a01b0386811682526020820186905260a082019061283f60408401876126de565b8460608401528084166080840152509695505050505050565b6020808252601c908201527f476861664d61726b6574506c6163653a2077726f6e672076616c756500000000604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826128f557634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156129145761291461294b565b500290565b60008282101561292b5761292b61294b565b500390565b60006000198214156129445761294461294b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611b5657600080fdfea2646970667358221220f033381b8a48a83110c45f186dd87ffd9d2395ed719d9c3361ddad716712352664736f6c63430008020033",
  "deployedBytecode": "0x6080604052600436106101395760003560e01c80637c1c9978116100ab578063b0e21e8a1161006f578063b0e21e8a146103b4578063b8ca3b83146103ca578063da35a26f146103df578063e13a40f0146103ff578063f0f442601461041f578063f2fde38b1461043f57610140565b80637c1c99781461032e5780637c9788861461034e5780638456cb591461036e5780638ae45505146103835780638da5cb5b1461039657610140565b806346d02934116100fd57806346d029341461025b578063561c9276146102ae5780635c975abb146102c157806361d027b3146102d9578063715018a6146102f9578063787dce3d1461030e57610140565b806328f2a0c21461014557806331f7d9641461016b5780633290463b146101985780633f4ba83a146101c857806343af356b146101df57610140565b3661014057005b600080fd5b6101586101533660046125f4565b61045f565b6040519081526020015b60405180910390f35b34801561017757600080fd5b50610180600181565b6040516001600160a01b039091168152602001610162565b3480156101a457600080fd5b506101b86101b33660046125c0565b61075c565b6040519015158152602001610162565b3480156101d457600080fd5b506101dd6109dc565b005b3480156101eb57600080fd5b5061024a6101fa366004612551565b60026020908152600092835260408084209091529082529020546001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b90041685565b604051610162959493929190612724565b34801561026757600080fd5b5061027b6102763660046125c0565b6109ee565b604080516001600160a01b0395861681526020810194909452911515918301919091529091166060820152608001610162565b6101b86102bc3660046125f4565b610a53565b3480156102cd57600080fd5b5060695460ff166101b8565b3480156102e557600080fd5b50600054610180906001600160a01b031681565b34801561030557600080fd5b506101dd610bd1565b34801561031a57600080fd5b506101dd610329366004612697565b610bd9565b34801561033a57600080fd5b506101b861034936600461257c565b610c37565b34801561035a57600080fd5b506101b8610369366004612551565b610e39565b34801561037a57600080fd5b506101dd61119e565b6101b861039136600461263d565b6111ae565b3480156103a257600080fd5b506037546001600160a01b0316610180565b3480156103c057600080fd5b5061015860015481565b3480156103d657600080fd5b50610158606481565b3480156103eb57600080fd5b506101dd6103fa3660046126af565b6114ae565b34801561040b57600080fd5b506101b861041a3660046125c0565b6115db565b34801561042b57600080fd5b506101dd61043a366004612512565b611a5e565b34801561044b57600080fd5b506101dd61045a366004612512565b611ae0565b6000610469611b59565b816001600160a01b0381166104c55760405162461bcd60e51b815260206004820181905260248201527f476861664d61726b6574506c6163653a2061646472657373206973207a65726f60448201526064015b60405180910390fd5b604051632e6f387760e01b81526001600160a01b0387166004820152602481018690526002604482015273__$6f36ab20fdf9043aa4045132f820d2d401$__90632e6f38779060640160006040518083038186803b15801561052657600080fd5b505af415801561053a573d6000803e3d6000fd5b505060408051608081018252600080825260208201819052918101829052606081019190915291506105699050565b33815260016001600160a01b03851614156105a25784341461059d5760405162461bcd60e51b81526004016104bc90612858565b610626565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906105d290339030908a90600401612700565b602060405180830381600087803b1580156105ec57600080fd5b505af1158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190612677565b505b60208181018681526001600160a01b03868116606085019081528a82166000908152600380865260408083208d845287528083208054600180820183558286529885208a519190940290930180549387166001600160a01b031990941693909317835595518288015587015160029091018054935190941661010002610100600160a81b031991151560ff19909416939093171691909117909155889052546106cf9190612919565b6001600160a01b0388811660008181526002602090815260408083208c84528252918290205482519384529083018b90528316828201523360608301526080820189905291871660a082015260c0810183905290519194507f099bd8f91c5f4fea587a36ba2437cdfdd9cf9254421e9e26682b48f95afdae12919081900360e00190a15050949350505050565b6001600160a01b038316600090815260036020908152604080832085845290915281208054339190849081106107a257634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b0316146108095760405162461bcd60e51b815260206004820152601a60248201527f476861664d61726b6574506c6163653a206e6f74206f776e657200000000000060448201526064016104bc565b6001600160a01b0384166000908152600360209081526040808320868452909152902080548390811061084c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206002600390920201015460ff1615610912576001600160a01b0384166000908152600260209081526040808320868452909152902054600160a01b900460ff16156108e35760405162461bcd60e51b815260206004820152601960248201527f476861664d61726b6574506c6163653a206e667420736f6c640000000000000060448201526064016104bc565b6001600160a01b03841660009081526002602090815260408083208684529091529020805460ff60a81b191690555b6001600160a01b03808516600081815260026020908152604080832088845282528083205493835260038252808320888452909152902080547f2206717382ed98a50d41c9d10a48cb2e4d7929ff50504925b9328b99fdf1122893889388939116918790811061099257634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546040516109be949392916001600160a01b0316908890612759565b60405180910390a16109d284843385611b9f565b5060019392505050565b6109e4611e2c565b6109ec611e86565b565b60036020528260005260406000206020528160005260406000208181548110610a1657600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03918216955091935060ff821692506101009091041684565b6000806001600160a01b0386166000908152600260209081526040808320888452909152902054600160b81b900460ff166001811115610aa357634e487b7160e01b600052602160045260246000fd5b14610aff5760405162461bcd60e51b815260206004820152602660248201527f476861664d61726b6574506c6163653a2062757954797065206973206e6f74206044820152654255594e4f5760d01b60648201526084016104bc565b6001600160a01b03821660011415610b3557823414610b305760405162461bcd60e51b81526004016104bc90612858565b610bb9565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd90610b6590339030908890600401612700565b602060405180830381600087803b158015610b7f57600080fd5b505af1158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb79190612677565b505b610bc885853386866000611ed8565b50949350505050565b6109ec611e2c565b610be1611e2c565b8060641015610c325760405162461bcd60e51b815260206004820152601c60248201527f476861664d61726b6574506c6163653a20696e76616c6964206665650000000060448201526064016104bc565b600155565b6000610c41611b59565b336040516331a9108f60e11b8152600481018590526001600160a01b0391821691861690636352211e9060240160206040518083038186803b158015610c8657600080fd5b505afa158015610c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbe9190612535565b6001600160a01b031614610d145760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016104bc565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610d4490339030908890600401612700565b600060405180830381600087803b158015610d5e57600080fd5b505af1158015610d72573d6000803e3d6000fd5b5050505073__$6f36ab20fdf9043aa4045132f820d2d401$__639dc05dc08585856002610d9c3390565b6040518663ffffffff1660e01b8152600401610dbc959493929190612819565b60006040518083038186803b158015610dd457600080fd5b505af4158015610de8573d6000803e3d6000fd5b505050507f743f118d87813972873571f72d19e16c1d25c1e7107cd884bb72b6784ddb1eb58484610e163390565b85604051610e2794939291906127e4565b60405180910390a15060019392505050565b6001600160a01b03828116600081815260026020818152604080842087855290915280832054905163676c480f60e01b81526004810194909452602484018690526044840191909152909216606482018190529073__$6f36ab20fdf9043aa4045132f820d2d401$__9063676c480f9060840160006040518083038186803b158015610ec457600080fd5b505af4158015610ed8573d6000803e3d6000fd5b50506040516323b872dd60e01b81526001600160a01b03871692506323b872dd9150610f0c90309085908890600401612700565b600060405180830381600087803b158015610f2657600080fd5b505af1158015610f3a573d6000803e3d6000fd5b5050505060005b6001600160a01b0385166000908152600360209081526040808320878452909152902054811015611100576001600160a01b03851660009081526003602090815260408083208784529091528120805483908110610faf57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b0316146110ee576001600160a01b03808616600081815260026020908152604080832089845282528083205493835260038252808320898452909152902080547f2d90ac1c059eb788f6122a35a6641a9423c6ab4a03f506fd7204f8d0d8750c8093899389939116918690811061104e57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102015460405161107a949392916001600160a01b0316908790612759565b60405180910390a16001600160a01b0385166000908152600360209081526040808320878452909152902080546110ee918791879190859081106110ce57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b031684611b9f565b806110f881612930565b915050610f41565b506001600160a01b0384811660008181526002602090815260408083208884528252918290205482519384529083018790529092168183015290517fe5eb66cd46c56d8f2e3f3671c821b67775962716c61f5ede46ced2c047c8900f9181900360600190a150506001600160a01b039190911660009081526002602090815260408083209383529290522080546001600160c01b0319169055600190565b6111a6611e2c565b6109ec61207f565b60006111b8611b59565b60408051630e96d5dd60e01b81526001600160a01b038716600482015260248101869052604481018590526064810184905260026084820152600360a48201523360c4820152905173__$6f36ab20fdf9043aa4045132f820d2d401$",
  "libraries": {
    "GhafMarketPlaceLib": "0xe7F7e517Ef826A171889B1f847E741D60C1d00C4"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptBid(address,uint256,uint256)": {
        "details": "Will be reverted if the seller has already accepted a bid",
        "params": {
          "_bidIdx": "Index of the bid in bids list",
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "buyNft(address,uint256,uint256,address)": {
        "params": {
          "_amount": "Amount of buyer's pay",
          "_nftContractAddress": "Address of NFT token contract",
          "_paymentToken": "Address of token that buyer uses for payment",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "cancelBid(address,uint256,uint256)": {
        "details": "Only bid owner can call this function",
        "params": {
          "_bidIdx": "Index of the bid in bids list",
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "delistNft(address,uint256)": {
        "details": "Revokes all the existing bids                             Reverts if the seller has accepted a bid or sold it",
        "params": {
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "increaseBid(address,uint256,uint256,uint256)": {
        "details": "Reverts if the new amount is lower than the previous amount                             User sends the bid difference",
        "params": {
          "_bidIdx": "of the buyer",
          "_newAmount": "of bid",
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "listNft(address,uint256,uint8)": {
        "details": "Call approve function of Nft Contract before the call this funcJust owner of nft can call this func",
        "params": {
          "_buyType": "Type of Buy nft (e.g. BUYNOW or AUCTION )",
          "_nftContractAddress": "Address of NFT token contract",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Only owner can pause "
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "putBid(address,uint256,uint256,address)": {
        "details": "User sends the bid amount along with the request",
        "params": {
          "_amount": "Amount of buyer's bid",
          "_nftContractAddress": "Address of NFT token contract",
          "_paymentToken": "Address of token that buyer uses for payment",
          "_tokenId": "A number that identify the NFT within the NFT token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Only owner can pause"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptBid(address,uint256,uint256)": {
        "notice": "Accepts one of the existing bids & Sends funds to seller & Send Nft to Buyer"
      },
      "buyNft(address,uint256,uint256,address)": {
        "notice": "Puts amount for buyying an Nft & Sends funds to seller & Send Nft to Buyer"
      },
      "cancelBid(address,uint256,uint256)": {
        "notice": "Removes buyer's bid"
      },
      "delistNft(address,uint256)": {
        "notice": "Delists an Nft"
      },
      "increaseBid(address,uint256,uint256,uint256)": {
        "notice": "Increases the existing bid amount"
      },
      "listNft(address,uint256,uint8)": {
        "notice": "Lists Nft of a user"
      },
      "pause()": {
        "notice": "Pause the contract so only the functions can be called which are whenPaused"
      },
      "putBid(address,uint256,uint256,address)": {
        "notice": "Puts bid for buyying an Nft"
      },
      "setProtocolFee(uint256)": {
        "notice": "Setter for protocol fee"
      },
      "setTreasury(address)": {
        "notice": "Setter for treasury address"
      },
      "unpause()": {
        "notice": "Unpause the contract so only the functions can be called which are whenNotPaused"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3698,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "treasury",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3701,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "protocolFee",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3708,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "nfts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Nft)2220_storage))"
      },
      {
        "astId": 3716,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "bids",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(Bid)2229_storage)dyn_storage))"
      },
      {
        "astId": 138,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "_initialized",
        "offset": 0,
        "slot": "4",
        "type": "t_uint8"
      },
      {
        "astId": 141,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "_initializing",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 798,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "__gap",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "_owner",
        "offset": 0,
        "slot": "55",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "__gap",
        "offset": 0,
        "slot": "56",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 321,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "_paused",
        "offset": 0,
        "slot": "105",
        "type": "t_bool"
      },
      {
        "astId": 426,
        "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
        "label": "__gap",
        "offset": 0,
        "slot": "106",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Bid)2229_storage)dyn_storage": {
        "base": "t_struct(Bid)2229_storage",
        "encoding": "dynamic_array",
        "label": "struct GhafMarketPlaceLib.Bid[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(BuyTypes)2208": {
        "encoding": "inplace",
        "label": "enum GhafMarketPlaceLib.BuyTypes",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(Bid)2229_storage)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct GhafMarketPlaceLib.Bid[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_array(t_struct(Bid)2229_storage)dyn_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Nft)2220_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct GhafMarketPlaceLib.Nft))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Nft)2220_storage)"
      },
      "t_mapping(t_uint256,t_array(t_struct(Bid)2229_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GhafMarketPlaceLib.Bid[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Bid)2229_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Nft)2220_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GhafMarketPlaceLib.Nft)",
        "numberOfBytes": "32",
        "value": "t_struct(Nft)2220_storage"
      },
      "t_struct(Bid)2229_storage": {
        "encoding": "inplace",
        "label": "struct GhafMarketPlaceLib.Bid",
        "members": [
          {
            "astId": 2222,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "buyerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2224,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "bidAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2226,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "isAccepted",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 2228,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "paymentToken",
            "offset": 1,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Nft)2220_storage": {
        "encoding": "inplace",
        "label": "struct GhafMarketPlaceLib.Nft",
        "members": [
          {
            "astId": 2210,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2212,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "isSold",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2214,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "hasAccepted",
            "offset": 21,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2216,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "isListed",
            "offset": 22,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2219,
            "contract": "contracts/GhafMarketplace/GhafMarketPlaceLogic.sol:GhafMarketPlaceLogic",
            "label": "buyType",
            "offset": 23,
            "slot": "0",
            "type": "t_enum(BuyTypes)2208"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}