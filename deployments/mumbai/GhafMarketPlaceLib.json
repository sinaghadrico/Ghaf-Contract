{
  "address": "0xe7F7e517Ef826A171889B1f847E741D60C1d00C4",
  "abi": [],
  "transactionHash": "0x1df69bad953ca7f3cbe9c257f326e5e1db3adf85913cce06c3526556ba1ca971",
  "receipt": {
    "to": null,
    "from": "0x5364E3557572bd5D5903C0e9C21BE359F2Eac1dA",
    "contractAddress": "0xe7F7e517Ef826A171889B1f847E741D60C1d00C4",
    "transactionIndex": 1,
    "gasUsed": "534580",
    "logsBloom": "0x
    "blockHash": "0xbf7432795dbb959b0b87d107b5d21aab8dfc9277003cfb94d932213044aa0bcf",
    "transactionHash": "0x1df69bad953ca7f3cbe9c257f326e5e1db3adf85913cce06c3526556ba1ca971",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 40474973,
        "transactionHash": "0x1df69bad953ca7f3cbe9c257f326e5e1db3adf85913cce06c3526556ba1ca971",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005364e3557572bd5d5903c0e9c21be359f2eac1da",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000437979bc7f09c0000000000000000000000000000000000000000000000020bcddec4b02c94ea0000000000000000000000000000000000000000000002073b617ce06fa116e40000000000000000000000000000000000000000000000020bc9a72d1464a44e0000000000000000000000000000000000000000000002073b65b4780b690780",
        "logIndex": 7,
        "blockHash": "0xbf7432795dbb959b0b87d107b5d21aab8dfc9277003cfb94d932213044aa0bcf"
      }
    ],
    "blockNumber": 40474973,
    "cumulativeGasUsed": "899414",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0184becd2248ac4c4a3bc647b353cb21",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GhafMarketplace/GhafMarketPlaceLib.sol\":\"GhafMarketPlaceLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/GhafMarketplace/GhafMarketPlaceLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\n\\r\\n\\r\\nlibrary GhafMarketPlaceLib {\\r\\n\\r\\n    // Structures\\r\\n\\r\\n    enum BuyTypes {\\r\\n        BUYNOW, // BUYNOW\\r\\n        AUCTION //AUCTION                    \\r\\n    }\\r\\n\\r\\n\\r\\n    /// @notice Structure for storing Nft data\\r\\n    /// @param seller Address of seller \\r\\n    /// @param isSold True if the Nft is sold\\r\\n    /// @param hasAccepted True if the seller accepted one of the bids\\r\\n    /// @param buyType Type of Buy nft (e.g. BUYNOW or AUCTION )\\r\\n\\tstruct Nft {\\r\\n        address seller;\\r\\n        bool isSold;\\r\\n        bool hasAccepted;\\r\\n        bool isListed;\\r\\n        BuyTypes buyType;\\r\\n  \\t}\\r\\n\\r\\n    /// @notice Structure for recording buyers bids\\r\\n    /// @param buyerAddress Buyer can withdraw ETH to this address\\r\\n    /// @param bidAmount Amount of buyre's bid\\r\\n    /// @param isAccepted True if the bid is accepted by seller\\r\\n    /// @param paymentToken Address of token that buyer uses for payment\\r\\n\\tstruct Bid {\\r\\n\\t\\taddress buyerAddress;\\r\\n\\t\\tuint bidAmount;\\r\\n        bool isAccepted;\\r\\n        address paymentToken;\\r\\n  \\t}\\r\\n\\r\\n    function listNftHelper(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        BuyTypes _buyType,\\r\\n        mapping(address =>  mapping(uint => Nft)) storage nfts,\\r\\n        address _seller\\r\\n    ) external  {\\r\\n        require(\\r\\n            !nfts[_nftContractAddress][_tokenId].isListed, \\r\\n            \\\"GhafMarketPlace: already listed\\\"\\r\\n        );\\r\\n\\r\\n        // Saves listed Nft\\r\\n        Nft memory _nft;\\r\\n        _nft.seller = _seller;\\r\\n        _nft.isListed = true;\\r\\n        _nft.buyType = _buyType;\\r\\n        nfts[_nftContractAddress][_tokenId] = _nft;\\r\\n    }\\r\\n\\r\\n    function delistNftHelper(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        mapping(address  => mapping(uint => Nft)) storage nfts,\\r\\n        address _seller\\r\\n    ) external view {\\r\\n        require(nfts[_nftContractAddress][_tokenId].isListed, \\\"GhafMarketPlace: no nft\\\");\\r\\n        require(nfts[_nftContractAddress][_tokenId].seller == _seller, \\\"GhafMarketPlace: not owner\\\");\\r\\n        require(!nfts[_nftContractAddress][_tokenId].isSold, \\\"GhafMarketPlace: already sold\\\");\\r\\n        require(!nfts[_nftContractAddress][_tokenId].hasAccepted, \\\"GhafMarketPlace: already accepted\\\");\\r\\n    }\\r\\n\\r\\n    function putBidHelper(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        mapping(address  => mapping(uint => Nft)) storage nfts\\r\\n    ) external view {\\r\\n        _canBid(\\r\\n            nfts[_nftContractAddress][_tokenId].isListed, \\r\\n            nfts[_nftContractAddress][_tokenId].hasAccepted,\\r\\n            nfts[_nftContractAddress][_tokenId].isSold\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function increaseBidHelper(\\r\\n        address _nftContractAddress,\\r\\n        uint256 _tokenId,\\r\\n        uint _bidIdx,\\r\\n        uint _newAmount,\\r\\n        mapping(address  => mapping(uint => Nft)) storage nfts,\\r\\n        mapping(address  => mapping(uint => Bid[])) storage bids,\\r\\n        address _seller\\r\\n    ) external view {\\r\\n        _canBid(\\r\\n            nfts[_nftContractAddress][_tokenId].isListed, \\r\\n            nfts[_nftContractAddress][_tokenId].hasAccepted,\\r\\n            nfts[_nftContractAddress][_tokenId].isSold\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            bids[_nftContractAddress][_tokenId][_bidIdx].buyerAddress == _seller, \\r\\n            \\\"GhafMarketPlace: not owner\\\"\\r\\n        );\\r\\n        require(\\r\\n            _newAmount > bids[_nftContractAddress][_tokenId][_bidIdx].bidAmount, \\r\\n            \\\"GhafMarketPlace: low amount\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n  \\r\\n\\r\\n    /// @notice Checks the bidding conditions\\r\\n    /// @dev Conditions for bidding: Nft exists, no offer accepted, not sold\\r\\n    function _canBid(\\r\\n        bool _isListed,\\r\\n        bool _hasAccepted,\\r\\n        bool _isSold\\r\\n    ) private pure {\\r\\n        require(_isListed, \\\"GhafMarketPlace: not listed\\\");\\r\\n        require(!_hasAccepted, \\\"GhafMarketPlace: already accepted\\\");\\r\\n        require(!_isSold, \\\"GhafMarketPlace: sold nft\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0x611f76b74f1fbadb34047c325c0c1a0438dd79eea084ce2cf7b1c78ecabb6666\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6108b661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80630e96d5dd1461005b5780632e6f387714610070578063676c480f146100835780639dc05dc014610096575b600080fd5b61006e6100693660046107dd565b6100b6565b005b61006e61007e366004610766565b61025c565b61006e610091366004610798565b6102ab565b8180156100a257600080fd5b5061006e6100b136600461070b565b610460565b6001600160a01b0387166000908152602084815260408083208984529091529020546101009060ff600160b01b8204811691600160a81b8104821691600160a01b90910416610636565b6001600160a01b038781166000908152602084815260408083208a845290915290208054918316918790811061014657634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b0316146101b25760405162461bcd60e51b815260206004820152601a60248201527f476861664d61726b6574506c6163653a206e6f74206f776e657200000000000060448201526064015b60405180910390fd5b6001600160a01b03871660009081526020838152604080832089845290915290208054869081106101f357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015484116102535760405162461bcd60e51b815260206004820152601b60248201527f476861664d61726b6574506c6163653a206c6f7720616d6f756e74000000000060448201526064016101a9565b50505050505050565b6001600160a01b0383166000908152602082815260408083208584529091529020546102a69060ff600160b01b8204811691600160a81b8104821691600160a01b90910416610636565b505050565b6001600160a01b038416600090815260208381526040808320868452909152902054600160b01b900460ff166103235760405162461bcd60e51b815260206004820152601760248201527f476861664d61726b6574506c6163653a206e6f206e667400000000000000000060448201526064016101a9565b6001600160a01b038481166000908152602084815260408083208784529091529020548116908216146103985760405162461bcd60e51b815260206004820152601a60248201527f476861664d61726b6574506c6163653a206e6f74206f776e657200000000000060448201526064016101a9565b6001600160a01b038416600090815260208381526040808320868452909152902054600160a01b900460ff16156104115760405162461bcd60e51b815260206004820152601d60248201527f476861664d61726b6574506c6163653a20616c726561647920736f6c6400000060448201526064016101a9565b6001600160a01b038416600090815260208381526040808320868452909152902054600160a81b900460ff161561045a5760405162461bcd60e51b81526004016101a99061083f565b50505050565b6001600160a01b038516600090815260208381526040808320878452909152902054600160b01b900460ff16156104d95760405162461bcd60e51b815260206004820152601f60248201527f476861664d61726b6574506c6163653a20616c7265616479206c69737465640060448201526064016101a9565b6105086040805160a0810182526000808252602082018190529181018290526060810182905290608082015290565b6001600160a01b03821681526001606082018190526080820190859081111561054157634e487b7160e01b600052602160045260246000fd5b9081600181111561056257634e487b7160e01b600052602160045260246000fd5b9052506001600160a01b0380871660009081526020858152604080832089845282529182902084518154928601519386015160608701511515600160b01b0260ff60b01b19911515600160a81b0260ff60a81b19961515600160a01b0260ff60a01b19949098166001600160a01b0319909616959095179290921695909517939093169190911792909216178082556080830151839291829060ff60b81b1916600160b81b83600181111561062757634e487b7160e01b600052602160045260246000fd5b02179055505050505050505050565b826106835760405162461bcd60e51b815260206004820152601b60248201527f476861664d61726b6574506c6163653a206e6f74206c6973746564000000000060448201526064016101a9565b81156106a15760405162461bcd60e51b81526004016101a99061083f565b80156102a65760405162461bcd60e51b815260206004820152601960248201527f476861664d61726b6574506c6163653a20736f6c64206e66740000000000000060448201526064016101a9565b80356001600160a01b038116811461070657600080fd5b919050565b600080600080600060a08688031215610722578081fd5b61072b866106ef565b945060208601359350604086013560028110610745578182fd5b92506060860135915061075a608087016106ef565b90509295509295909350565b60008060006060848603121561077a578283fd5b610783846106ef565b95602085013595506040909401359392505050565b600080600080608085870312156107ad578384fd5b6107b6856106ef565b935060208501359250604085013591506107d2606086016106ef565b905092959194509250565b600080600080600080600060e0888a0312156107f7578182fd5b610800886106ef565b96506020880135955060408801359450606088013593506080880135925060a0880135915061083160c089016106ef565b905092959891949750929550565b60208082526021908201527f476861664d61726b6574506c6163653a20616c726561647920616363657074656040820152601960fa1b60608201526080019056fea2646970667358221220c60bb65ad879a631d98c5918889dc5cbcb11662aab764754666609b0efe1ba8d64736f6c63430008020033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80630e96d5dd1461005b5780632e6f387714610070578063676c480f146100835780639dc05dc014610096575b600080fd5b61006e6100693660046107dd565b6100b6565b005b61006e61007e366004610766565b61025c565b61006e610091366004610798565b6102ab565b8180156100a257600080fd5b5061006e6100b136600461070b565b610460565b6001600160a01b0387166000908152602084815260408083208984529091529020546101009060ff600160b01b8204811691600160a81b8104821691600160a01b90910416610636565b6001600160a01b038781166000908152602084815260408083208a845290915290208054918316918790811061014657634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b0316146101b25760405162461bcd60e51b815260206004820152601a60248201527f476861664d61726b6574506c6163653a206e6f74206f776e657200000000000060448201526064015b60405180910390fd5b6001600160a01b03871660009081526020838152604080832089845290915290208054869081106101f357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015484116102535760405162461bcd60e51b815260206004820152601b60248201527f476861664d61726b6574506c6163653a206c6f7720616d6f756e74000000000060448201526064016101a9565b50505050505050565b6001600160a01b0383166000908152602082815260408083208584529091529020546102a69060ff600160b01b8204811691600160a81b8104821691600160a01b90910416610636565b505050565b6001600160a01b038416600090815260208381526040808320868452909152902054600160b01b900460ff166103235760405162461bcd60e51b815260206004820152601760248201527f476861664d61726b6574506c6163653a206e6f206e667400000000000000000060448201526064016101a9565b6001600160a01b038481166000908152602084815260408083208784529091529020548116908216146103985760405162461bcd60e51b815260206004820152601a60248201527f476861664d61726b6574506c6163653a206e6f74206f776e657200000000000060448201526064016101a9565b6001600160a01b038416600090815260208381526040808320868452909152902054600160a01b900460ff16156104115760405162461bcd60e51b815260206004820152601d60248201527f476861664d61726b6574506c6163653a20616c726561647920736f6c6400000060448201526064016101a9565b6001600160a01b038416600090815260208381526040808320868452909152902054600160a81b900460ff161561045a5760405162461bcd60e51b81526004016101a99061083f565b50505050565b6001600160a01b038516600090815260208381526040808320878452909152902054600160b01b900460ff16156104d95760405162461bcd60e51b815260206004820152601f60248201527f476861664d61726b6574506c6163653a20616c7265616479206c69737465640060448201526064016101a9565b6105086040805160a0810182526000808252602082018190529181018290526060810182905290608082015290565b6001600160a01b03821681526001606082018190526080820190859081111561054157634e487b7160e01b600052602160045260246000fd5b9081600181111561056257634e487b7160e01b600052602160045260246000fd5b9052506001600160a01b0380871660009081526020858152604080832089845282529182902084518154928601519386015160608701511515600160b01b0260ff60b01b19911515600160a81b0260ff60a81b19961515600160a01b0260ff60a01b19949098166001600160a01b0319909616959095179290921695909517939093169190911792909216178082556080830151839291829060ff60b81b1916600160b81b83600181111561062757634e487b7160e01b600052602160045260246000fd5b02179055505050505050505050565b826106835760405162461bcd60e51b815260206004820152601b60248201527f476861664d61726b6574506c6163653a206e6f74206c6973746564000000000060448201526064016101a9565b81156106a15760405162461bcd60e51b81526004016101a99061083f565b80156102a65760405162461bcd60e51b815260206004820152601960248201527f476861664d61726b6574506c6163653a20736f6c64206e66740000000000000060448201526064016101a9565b80356001600160a01b038116811461070657600080fd5b919050565b600080600080600060a08688031215610722578081fd5b61072b866106ef565b945060208601359350604086013560028110610745578182fd5b92506060860135915061075a608087016106ef565b90509295509295909350565b60008060006060848603121561077a578283fd5b610783846106ef565b95602085013595506040909401359392505050565b600080600080608085870312156107ad578384fd5b6107b6856106ef565b935060208501359250604085013591506107d2606086016106ef565b905092959194509250565b600080600080600080600060e0888a0312156107f7578182fd5b610800886106ef565b96506020880135955060408801359450606088013593506080880135925060a0880135915061083160c089016106ef565b905092959891949750929550565b60208082526021908201527f476861664d61726b6574506c6163653a20616c726561647920616363657074656040820152601960fa1b60608201526080019056fea2646970667358221220c60bb65ad879a631d98c5918889dc5cbcb11662aab764754666609b0efe1ba8d64736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}